{
    "version": 3,
    "sources": [
        "../../../src/api/controller/scenery.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "indexAction",
        "page",
        "get",
        "size",
        "scenerytitle",
        "model",
        "_pk",
        "data",
        "where",
        "shstate",
        "order",
        "countSelect",
        "sceneryTitle",
        "arrdata",
        "item",
        "pics",
        "getPicsbyid",
        "sceneryID",
        "getstate",
        "push",
        "success",
        "getSceneryListBySchoolidsAction",
        "schoolids",
        "schoolid",
        "select",
        "getscenerydetailAction",
        "id",
        "find",
        "think",
        "isEmpty",
        "discussList",
        "getDiscussById",
        "deleteAction",
        "update",
        "detailAction",
        "scenery",
        "getScenerybyid",
        "addEditAction",
        "post",
        "address",
        "shdesc",
        "longitude",
        "latitude",
        "soundurl",
        "videourl",
        "param",
        "insertid",
        "add",
        "json",
        "targetid",
        "delete"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/scenery.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n    async indexAction() {\n        const page = this.get('pageindex') || 1;\n        const size = this.get('pagesize') || 10;\n        const scenerytitle = this.get('scenerytitle') || '';\n\n        const model = this.model('scenery');\n        model._pk = 'sceneryID';\n\n        var data;\n        if (scenerytitle == '') {\n            data = await model.where({shstate:0}).page(page, size).order('sceneryID desc').countSelect();\n        } else {\n            data = await model.where({sceneryTitle: ['like', `%${scenerytitle}%`], shstate:0}).order('sceneryID desc').page(page, size).countSelect();\n        }\n        const arrdata = [];\n        for (const item of data.data) {\n            item.pics = await this.model('scenery').getPicsbyid(item.sceneryID);\n            item.shstate = await this.model('scenery').getstate(item.sceneryID);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n        return this.success(data)\n    }\n\n    async getSceneryListBySchoolidsAction() {\n        const schoolids = this.get('schoolids');\n        const data = await this.model('scenery').where({schoolid:['IN', schoolids]}).select();\n        return this.success(data)\n    }\n\n    async getscenerydetailAction() {\n        const id = this.get('id');\n        const model = this.model('scenery');\n        model._pk = 'sceneryID';\n        const data = await model.where({sceneryID: id}).find();\n        if (!think.isEmpty(data)) {\n            data.pics = await this.model('scenery').getPicsbyid(data.sceneryID);\n            data.shstate = await this.model('scenery').getstate(data.sceneryID);\n            data.discussList = await this.model('discuss').getDiscussById(id,0);\n        }\n        return this.success(data);\n    }\n\n    async deleteAction() {\n        const id = this.get('id');\n        const data = {\n            shstate: 1\n        }\n        await this.model('scenery').where({sceneryID:id}).update(data);\n        return this.success('删除成功')\n    }\n\n    async detailAction() {\n        const id = this.get('id');\n        const model = this.model('scenery');\n        const data = await model.where({sceneryID: id}).find();\n\n        const arrdata = [];\n        // for (const item of data.data) {\n            data.scenery = await this.model('school').getScenerybyid(data.sceneryID);\n        //     // item.shstate = await this.model('school').getstate(item.schoolID);\n        //     arrdata.push(item);\n        // }\n        // data.data = arrdata;\n        return this.success(data)\n    }\n\n    async addEditAction() {\n        const sceneryTitle = this.post('scenerytitle');\n        const schoolid = this.post('schoolid');\n        const address = this.post('address') || '';\n        const shdesc= this.post('shdesc');\n        const longitude = this.post('longitude');\n        const latitude = this.post('latitude');\n        const soundurl = this.post('soundurl');\n        const videourl = this.post('videourl');\n        const id = this.get('id');\n\n        let param = {\n            sceneryTitle: sceneryTitle,\n            schoolid: schoolid,\n            address: address,\n            shdesc: shdesc,\n            longitude: longitude,\n            latitude: latitude,\n            soundurl,\n            videourl\n        }; \n        if (think.isEmpty(id)) {\n            let model = this.model('scenery');\n            const insertid = await model.add(param);\n            \n            // 上传景点图片\n            if (insertid) {\n                return this.json({\n                        insertid:insertid\n                    });\n            }\n        } else {\n            // 1 删除source, 2修改\n            await this.model('source').where({targetid:id}).delete();\n            await this.model('scenery').where({sceneryID:id}).update(param);\n            return this.success('景点修改成功')\n        }\n        \n    }\n}"
    ]
}