{
    "version": 3,
    "sources": [
        "../../../src/api/controller/discuss.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "addAction",
        "distype",
        "get",
        "targetid",
        "studentid",
        "scenerytype",
        "content",
        "post",
        "shstate",
        "model",
        "data",
        "think",
        "isEmpty",
        "insertid",
        "add",
        "success",
        "listAction",
        "pageindex",
        "pagesize",
        "sceneryid",
        "activityID",
        "schoolid",
        "typeconition",
        "scenerycondition",
        "activitycondition",
        "schoolcondition",
        "statusconditionn",
        "studentcondition",
        "id",
        "start",
        "query",
        "counta",
        "pagecount",
        "Math",
        "ceil",
        "t",
        "getdatabyname",
        "name",
        "_pk",
        "dataname",
        "where",
        "cachename",
        "select",
        "i",
        "length",
        "cache",
        "delete",
        "homeDiscussAction",
        "homedata",
        "console",
        "log",
        "order",
        "page",
        "countSelect",
        "arrdata",
        "item",
        "pics",
        "getPicsbyid",
        "isgroup",
        "getField",
        "likednum",
        "discussid",
        "discussID",
        "count",
        "poto",
        "field",
        "studentID",
        "find",
        "push",
        "likediscussAction",
        "clicknum",
        "para",
        "update",
        "clickdata",
        "json",
        "msg",
        "newnum",
        "hasLikeDiscussAction"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/discuss.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n    async addAction() {\n        const distype = this.get('distype');\n        const targetid = this.get('targetid') || 0;\n        const studentid = this.get('studentid');\n        const scenerytype = this.get('scenerytype');\n        const content = this.post('content');\n        const shstate = this.post('shstate') || 0;   \n\n        const model = this.model('discuss');\n        let data = null;\n        if (think.isEmpty(scenerytype)) {\n            data = {\n                distype,targetid,studentid,content,shstate\n            }\n        } else {\n            data = {\n                distype,targetid,studentid,content,shstate,scenerytype\n            }\n        }\n\n        let insertid = await model.add(data);\n        return this.success('留言成功')\n    }\n\n    async listAction() {\n        const model =  this.model('discuss');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const shstate = this.get('shstate');\n        const distype = this.get('distype');\n        const sceneryid = this.get('sceneryid');\n        const activityID = this.get('activityid');\n        const schoolid = this.get('schoolid');\n        const studentid = this.get('studentid');\n\n        let typeconition = '';\n        let scenerycondition = '';\n        let activitycondition = '';\n        let schoolcondition = '';\n        let statusconditionn = '';\n        let studentcondition = '';\n\n        if (think.isEmpty(shstate)) {\n            statusconditionn = '1=1 ';\n        } else {\n            statusconditionn = 'a.shstate='+shstate\n        }\n\n        if (think.isEmpty(distype)) {\n            typeconition = '1=1 ';\n        } else {\n            let id = -1;\n            if (distype == 0) {\n                id = sceneryid;\n            } else if (distype == 1) {\n                id = activityID;\n            } else if (distype == 2) {\n                id = schoolid;\n            } else if (distype == 3) {\n                id = 0;\n            }\n            if(!think.isEmpty(id)) {\n                typeconition = 'a.distype='+distype+' and a.targetid='+id;\n            } else {\n                typeconition = 'a.distype='+distype;\n            }\n        }\n\n        if (think.isEmpty(sceneryid)) {\n            scenerycondition = '1=1 ';\n        } else {\n            scenerycondition = 'sceneryid='+sceneryid\n        }\n\n        if (think.isEmpty(activityID)) {\n            activitycondition = '1=1 ';\n        } else {\n            activitycondition = 'activityID='+activityID;\n        }\n\n        if (think.isEmpty(schoolid)) {\n            schoolcondition = '1=1 ';\n        } else {\n            schoolcondition = 'schoolID='+schoolid;\n        }\n\n        if (think.isEmpty(studentid)) {\n            studentcondition = '1=1 ';\n        } else {\n            studentcondition = 'a.studentid='+studentid;\n        }\n        const start = (pageindex -1) * pagesize;\n        const data = await model.query(\"select a.discussID,s.studentName,s.photo,a.distype,a.targetid,a.scenerytype,a.studentid,a.content,a.shstate,a.isrecommend,a.createdate, case  when distype=0 then (select scenerytitle from culture_scenery where \"+scenerycondition+\" limit 1) when distype=1 then (select activityname from culture_activity where \"+activitycondition+\" limit 1) when distype=2 then (select schoolname from culture_school where \"+schoolcondition+\" limit 1) when distype=3 then \\\"APP首页\\\" end as targetaddress from culture_discuss a left join culture_student s on s.studentid=a.studentid where \"+typeconition+\" and \"+studentcondition+\" and \"+statusconditionn+\" and a.shstate=1 order by discussID desc limit \"+start+\",\"+pagesize+\" \");\n        const counta = await model.query(\"select count(*) t from (select a.discussID,s.studentName,a.distype,a.targetid,a.studentid,a.content,a.shstate,  case  when distype=0 then (select scenerytitle from culture_scenery where \"+scenerycondition+\" limit 1) when distype=1 then (select activityname from culture_activity where \"+activitycondition+\" limit 1) when distype=2 then (select schoolname from culture_school where \"+schoolcondition+\" limit 1) when distype=3 then \\\"APP首页\\\" end as targetaddress from culture_discuss a left join culture_student s on s.studentid=a.studentid where \"+typeconition+\" and \"+studentcondition+\" and \"+statusconditionn+\" and a.shstate=1) t \");\n        const pagecount = Math.ceil(counta[0].t / pagesize); //(counta[0].t + parseInt(pagesize - 1)) / pagesize;\n        return this.success({counta:counta[0].t,pagecount:pagecount,pageindex:pageindex,pagesize:pagesize,data})\n    }\n\n    async getdatabyname(name) {\n        const model = this.model('pagecache');\n        model._pk = 'cacheid';\n        const dataname = await model.where({cachename:['like','%'+name+'%']}).select();\n        \n        if (!think.isEmpty(dataname)) {\n            for (let i = 0; i < dataname.length; i++) {\n                let name = dataname[i].cachename;\n                await this.cache(name, null);\n            }\n        }\n        const data = await model.where({cachename:['like','%'+name+'%']}).delete();\n        return data;\n    }\n    \n    async homeDiscussAction() {\n        const model =  this.model('discuss');\n        model._pk = \"discussID\";\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const studentid = this.get('studentid');\n\n        // await this.cache('home_discuss'+pageindex+'_'+pagesize, null);\n        const homedata = await this.cache('home_discuss'+pageindex+'_'+pagesize);\n        if (!think.isEmpty(homedata)) {\n            console.log('read from cache', 'home_discuss'+pageindex+'_'+pagesize)\n            return this.success(homedata)\n        }\n        const data = await model.where({shstate:1}).order('discussID desc').page(pageindex, pagesize).countSelect();\n\n        const arrdata = [];\n        for (const item of data.data) {\n            if (item.distype == 0) { // 景点\n                item.pics = await this.model('scenery').getPicsbyid(item.targetid);\n            } else if (item.distype == 1) { // 活动\n                item.pics = await this.model('activity').getPicsbyid(item.targetid);\n                item.isgroup = await this.model('activity').where({activityID:item.targetid}).getField('isGroup', true);\n            } else if (item.distype == 2) {\n                item.pics = await this.model('school').getPicsbyid(item.targetid);\n            } else {\n                item.pics = []\n            }\n            // item.likednum = await this.model('discuss').where({discussID:item.discussID, studentid:studentid}).getField('clicknum', true);\n            item.likednum = await this.model('like_discuss').where({discussid:item.discussID, studentid:studentid}).count();\n            item.poto = await this.model('student').field(['photo','studentName']).where({studentID:item.studentid}).find();\n            arrdata.push(item)\n        }\n        data.data = arrdata;\n        // console.log('set cache')\n        await this.cache('home_discuss'+pageindex+'_'+pagesize, data, 'redis')\n\n        await this.model('pagecache').add({cachename:'home_discuss'+pageindex+'_'+pagesize});\n\n        return this.success(data)\n    }\n\n    async likediscussAction() {\n        const id = this.get('discussid');\n        const studentid = this.get('studentid');\n        let data = await this.model('discuss').where({discussID:id}).find();\n        let clicknum = data.clicknum + 1;\n        const para = {clicknum:clicknum};\n        await this.model('discuss').where({discussID:id}).update(para);\n        await this.model('like_discuss').add({studentid: studentid, discussid:id});\n        await this.getdatabyname('home_discuss');\n\n        const clickdata = await this.model('discuss').where({discussID:id}).getField('clicknum', true)\n        return this.json({msg:'点赞成功', newnum:clickdata});\n    }\n\n    async hasLikeDiscussAction() {\n        const id = this.get('discussid');\n        const studentid = this.get('studentid');\n        const data = await this.model('like_discuss').where({discussid:id, studentid:studentid}).count();\n        return this.success(data)\n    }\n    \n}"
    ]
}