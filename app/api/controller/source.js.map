{
    "version": 3,
    "sources": [
        "../../../src/api/controller/source.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "getListBytargetidAndSourceTypeAction",
        "targetid",
        "get",
        "sourcetype",
        "pageindex",
        "pagesize",
        "model",
        "_pk",
        "para",
        "think",
        "isEmpty",
        "sourceType",
        "data",
        "where",
        "page",
        "countSelect",
        "success"
    ],
    "mappings": ";;AAAA,MAAMA,OAAOC,QAAQ,WAAR,CAAb;;AAEAC,OAAOC,OAAP,GAAiB,cAAcH,IAAd,CAAmB;;AAE1BI,wCAAN,GAA4C;AAAA;;AAAA;AACxC,kBAAMC,WAAW,MAAKC,GAAL,CAAS,UAAT,CAAjB;AACA,kBAAMC,aAAa,MAAKD,GAAL,CAAS,YAAT,CAAnB;AACA,kBAAME,YAAY,MAAKF,GAAL,CAAS,WAAT,KAAyB,CAA3C;AACA,kBAAMG,WAAW,MAAKH,GAAL,CAAS,UAAT,KAAwB,EAAzC;;AAEA,kBAAMI,QAAQ,MAAKA,KAAL,CAAW,QAAX,CAAd;AACAA,kBAAMC,GAAN,GAAY,UAAZ;;AAEA,gBAAIC,OAAO,EAAX;AACA,gBAAI,CAACC,MAAMC,OAAN,CAAcT,QAAd,CAAD,IAA4B,CAACQ,MAAMC,OAAN,CAAcP,UAAd,CAAjC,EAA4D;AACxDK,uBAAO,EAACP,UAASA,QAAV,EAAoBU,YAAWR,UAA/B,EAAP;AACH,aAFD,MAEO,IAAG,CAACM,MAAMC,OAAN,CAAcT,QAAd,CAAJ,EAA6B;AAChCO,uBAAO,EAACP,UAASA,QAAV,EAAP;AACH,aAFM,MAEA;AACHO,uBAAO,EAACG,YAAWR,UAAZ,EAAP;AACH;AACD,kBAAMS,OAAO,MAAMN,MAAMO,KAAN,CAAYL,IAAZ,EAAkBM,IAAlB,CAAuBV,SAAvB,EAAkCC,QAAlC,EAA4CU,WAA5C,EAAnB;AACA,mBAAO,MAAKC,OAAL,CAAaJ,IAAb,CAAP;AAlBwC;AAmB3C;AArB+B,CAApC",
    "file": "../../../src/api/controller/source.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n\n    async getListBytargetidAndSourceTypeAction(){\n        const targetid = this.get('targetid');\n        const sourcetype = this.get('sourcetype');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 10;\n\n        const model = this.model('source');\n        model._pk = 'sourceID';\n\n        let para = { };\n        if (!think.isEmpty(targetid) && !think.isEmpty(sourcetype)) {\n            para = {targetid:targetid, sourceType:sourcetype}\n        } else if(!think.isEmpty(targetid)) {\n            para = {targetid:targetid}\n        } else {\n            para = {sourceType:sourcetype}\n        }\n        const data = await model.where(para).page(pageindex, pagesize).countSelect();\n        return this.success(data)\n    }\n}"
    ]
}