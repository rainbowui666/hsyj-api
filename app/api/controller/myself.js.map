{
    "version": 3,
    "sources": [
        "../../../src/api/controller/myself.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "getMyallAction",
        "id",
        "get",
        "shstate",
        "data",
        "model",
        "query",
        "success",
        "getMyAttentionAction",
        "pageindex",
        "pagesize",
        "start",
        "_pk",
        "counta",
        "pagecount",
        "Math",
        "ceil",
        "t",
        "arrdata",
        "item",
        "pics",
        "getPicsbyid",
        "sceneryid",
        "push",
        "getMyActivityListAction",
        "activityid",
        "joindate",
        "getStudentIsJoinActivity",
        "Number",
        "Date",
        "endDate",
        "length",
        "hasjoin"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/myself.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n    async getMyallAction() {\n        const id = this.get('studentid');\n        const shstate = this.get('shstate');\n        const data = await this.model('student_activity').query(\"select count(studentID) as attentionActivityTimes,(select count(studentID) as attentions from culture_student_activity where studentid=\"+id+\" and shstate=\"+shstate+\") attentionSceneryTimes from culture_student_scenery where studentid=\"+id+\" and shstate=\"+shstate+\"\")\n        return this.success(data)\n    }\n\n    async getMyAttentionAction() {\n        const id = this.get('studentid');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const start = (pageindex -1) * pagesize;\n        const model =  this.model('student');\n        model._pk = \"studentID\";\n\n        const data = await model.query(\"select ssc.*, sc.schoolid,sc.longitude,sc.latitude,sc.sceneryTitle from culture_student_scenery ssc left join culture_scenery sc on ssc.sceneryid=sc.sceneryID where ssc.shstate=1 and ssc.studentid=\"+id+\" limit \"+start+\",\"+pagesize+\"\");\n        const counta = await model.query(\"select count(*) t from (select ssc.*, sc.schoolid,sc.longitude,sc.latitude,sc.sceneryTitle from culture_student_scenery ssc left join culture_scenery sc on ssc.sceneryid=sc.sceneryID where ssc.shstate=1 and ssc.studentid=\"+id+\" ) t\");\n        const pagecount = Math.ceil(counta[0].t / pagesize);\n\n        const arrdata = [];\n        for (const item of data) {\n            item.pics = await this.model('scenery').getPicsbyid(item.sceneryid);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n\n        return this.success({counta:counta[0].t,pagecount:pagecount,pageindex:pageindex,pagesize:pagesize,data})\n    }\n\n    async getMyActivityListAction() {\n        const id = this.get('studentid');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const start = (pageindex -1) * pagesize;\n        const model =  this.model('student');\n        model._pk = \"studentID\"\n        const data = await model.query(\"select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" limit \"+start+\",\"+pagesize+\"\");\n        const counta = await model.query(\"select count(*) t from (select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" ) t\");\n        const pagecount = Math.ceil(counta[0].t / pagesize);\n\n        const arrdata = [];\n        for (const item of data) {\n            item.pics = await this.model('activity').getPicsbyid(item.activityid);\n            let joindate = await this.model('student_activity').getStudentIsJoinActivity(id,item.activityid);\n            if (Number(new Date()) > Number(new Date(item.endDate)) && joindate && joindate.length > 0) {\n                item.hasjoin = '已完成'\n            } else if(item.hasjoin = joindate && joindate.length > 0) {\n                item.hasjoin = '已报名' \n            } else {\n                item.hasjoin = '';\n            }\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n        return this.success({counta:counta[0].t,pagecount:pagecount,pageindex:pageindex,pagesize:pagesize,data})\n    }\n}"
    ]
}