{
    "version": 3,
    "sources": [
        "../../../src/api/controller/myself.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "getMyallAction",
        "id",
        "get",
        "shstate",
        "data",
        "model",
        "query",
        "success",
        "getMyAttentionAction",
        "pageindex",
        "pagesize",
        "start",
        "_pk",
        "counta",
        "pagecount",
        "Math",
        "ceil",
        "t",
        "arrdata",
        "item",
        "pics",
        "getPicsbyid",
        "sceneryid",
        "getstate",
        "push",
        "getMyActivityListAction",
        "hasjoin",
        "think",
        "isEmpty",
        "activityid",
        "getMyDiscussAction",
        "studentid",
        "where",
        "order",
        "page",
        "countSelect",
        "getMySceneryAction"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/myself.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n    async getMyallAction() {\n        const id = this.get('studentid');\n        const shstate = this.get('shstate');\n        const data = await this.model('student_activity').query(\"select count(studentID) as attentionActivityTimes,(select count(studentID) as attentions from culture_student_activity where studentid=\"+id+\" and shstate=\"+shstate+\") attentionSceneryTimes, (select count(studentid) as attent from culture_discuss where studentid=\"+id+\") attentionDiscuss from culture_student_scenery where studentid=\"+id+\" and shstate=\"+shstate+\"\")\n        return this.success(data)\n    }\n\n    async getMyAttentionAction() {\n        const id = this.get('studentid');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const start = (pageindex -1) * pagesize;\n        const model =  this.model('student');\n        model._pk = \"studentID\";\n\n        const data = await model.query(\"select ssc.*, sc.schoolid,sc.longitude,sc.latitude,sc.sceneryTitle from culture_student_scenery ssc left join culture_scenery sc on ssc.sceneryid=sc.sceneryID where ssc.shstate=1 and ssc.studentid=\"+id+\" limit \"+start+\",\"+pagesize+\"\");\n        const counta = await model.query(\"select count(*) t from (select ssc.*, sc.schoolid,sc.longitude,sc.latitude,sc.sceneryTitle from culture_student_scenery ssc left join culture_scenery sc on ssc.sceneryid=sc.sceneryID where ssc.shstate=1 and ssc.studentid=\"+id+\" ) t\");\n        const pagecount = Math.ceil(counta[0].t / pagesize);\n\n        const arrdata = [];\n        for (const item of data) {\n            item.pics = await this.model('scenery').getPicsbyid(item.sceneryid);\n            item.shstate = await this.model('scenery').getstate(item.sceneryid);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n\n        return this.success({counta:counta[0].t,pagecount:pagecount,pageindex:pageindex,pagesize:pagesize,data})\n    }\n\n    async getMyActivityListAction() {\n        const id = this.get('studentid');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const hasjoin = this.get('hasjoin');\n\n        const start = (pageindex -1) * pagesize;\n        const model =  this.model('student');\n        model._pk = \"studentID\";\n        let data = null;\n        let counta = null;\n\n        if (think.isEmpty(hasjoin)) {\n            data = await model.query(\"select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate,case when (a.endDate > now() and now() > a.startDate) then '进行中' when a.endDate < now() then '已完成' when a.startDate > now() then '已报名' end as hasjoin from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" limit \"+start+\",\"+pagesize+\"\");\n            counta = await model.query(\"select count(*) t from (select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" ) t\");\n        } else if (hasjoin == '进行中'){\n            data = await model.query(\"select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate,case when (a.endDate > now() and now() > a.startDate) then '进行中' when a.endDate < now() then '已完成' when a.startDate > now() then '已报名' end as hasjoin from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" and (a.endDate > now() and now() > a.startDate) limit \"+start+\",\"+pagesize+\"\");\n            counta = await model.query(\"select count(*) t from (select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" and (a.endDate > now() and now() > a.startDate)) t\");\n        } else if (hasjoin == '已完成') {\n            data = await model.query(\"select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate,case when (a.endDate > now() and now() > a.startDate) then '进行中' when a.endDate < now() then '已完成' when a.startDate > now() then '已报名' end as hasjoin from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" and a.endDate < now() limit \"+start+\",\"+pagesize+\"\");\n            counta = await model.query(\"select count(*) t from (select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" and a.endDate < now()) t\");      \n        } else if (hasjoin == '已报名') {\n            data = await model.query(\"select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate,case when (a.endDate > now() and now() > a.startDate) then '进行中' when a.endDate < now() then '已完成' when a.startDate > now() then '已报名' end as hasjoin from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" and a.startDate > now() limit \"+start+\",\"+pagesize+\"\");\n            counta = await model.query(\"select count(*) t from (select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" and a.startDate > now()) t\");      \n        } else {\n            data = await model.query(\"select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate,case when (a.endDate > now() and now() > a.startDate) then '进行中' when a.endDate < now() then '已完成' when a.startDate > now() then '已报名' end as hasjoin from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" limit \"+start+\",\"+pagesize+\"\");\n            counta = await model.query(\"select count(*) t from (select sa.*, a.activityName,a.sponsor,a.startDate, a.endDate from culture_student_activity sa left join culture_activity a on sa.activityid=a.activityid where sa.studentid=\"+id+\" ) t\");\n        }\n        const pagecount = Math.ceil(counta[0].t / pagesize);\n\n        const arrdata = [];\n        for (const item of data) {\n            item.pics = await this.model('activity').getPicsbyid(item.activityid);\n            // let joindate = await this.model('student_activity').getStudentIsJoinActivity(id,item.activityid);\n            // if (Number(new Date()) > Number(new Date(item.endDate)) && joindate && joindate.length > 0) {\n            //     item.hasjoin = '已完成'\n            // } else if(joindate && joindate.length > 0) {\n            //     item.hasjoin = '已报名' \n            // } else if (Number(new Date(item.startDate)) < Number(new Date()) < Number(new Date(item.endDate))) {\n            //     item.hasjoin = '进行中';\n            // }\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n        return this.success({counta:counta[0].t,pagecount:pagecount,pageindex:pageindex,pagesize:pagesize,data})\n    }\n\n    async getMyDiscussAction() {\n        const studentid = this.get('studentid');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n\n        const model = this.model('discuss')\n        model._pk=\"discussID\";\n        const data = await model.where({studentid: studentid, shstate:1}).order('discussID desc').page(pageindex, pagesize).countSelect();\n        return this.success(data)\n    }\n\n    async getMySceneryAction() {\n        const studentid = this.get('studentid');\n        const model = this.model('student_scenery');\n        let data = null;\n        if (!think.isEmpty(studentid)) {\n            data = await model.query(\"select ss.*,s.sceneryTitle,s.shdesc,s.sctype from culture_student_scenery ss left join culture_scenery s on ss.sceneryid=s.sceneryid where s.shstate=0 and ss.studentid=\"+studentid+\" and ss.shstate=1 and ss.sceneryid not in (select targetid from culture_discuss where distype=0)\");\n        } else {\n            data = await model.query(\"select ss.*,s.sceneryTitle,s.shdesc,s.sctype from culture_student_scenery ss left join culture_scenery s on ss.sceneryid=s.sceneryid where s.shstate=0 and ss.shstate=1 and ss.sceneryid not in (select targetid from culture_discuss where distype=0)\");\n        }\n            const arrdata = [];\n        for (const item of data) {\n            item.pics = await this.model('scenery').getPicsbyid(item.sceneryid);\n            item.shstate = await this.model('scenery').getstate(item.sceneryid);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n        return this.success(data);\n    }\n}"
    ]
}