{
    "version": 3,
    "sources": [
        "../../../src/api/controller/myself.js"
    ],
    "names": [
        "Base",
        "require",
        "_",
        "module",
        "exports",
        "getMyallAction",
        "id",
        "get",
        "shstate",
        "data",
        "model",
        "query",
        "success",
        "getMyAttentionAction",
        "pageindex",
        "pagesize",
        "start",
        "_pk",
        "counta",
        "pagecount",
        "Math",
        "ceil",
        "t",
        "arrdata",
        "item",
        "pics",
        "getPicsbyid",
        "sceneryid",
        "getstate",
        "push",
        "getArrStatu",
        "dataAttendtionIds",
        "studentid",
        "arrActs",
        "think",
        "isEmpty",
        "i",
        "length",
        "actData",
        "field",
        "where",
        "activityID",
        "find",
        "needschoolpass",
        "needscenerypass",
        "isgroup",
        "needSchoolPass",
        "needSceneryPass",
        "isGroup",
        "realattentscenery",
        "dataScenery",
        "activityid",
        "getField",
        "uniq",
        "dataschool",
        "join",
        "sceneryID",
        "iscomplate",
        "joindate",
        "getStudentIsJoinGroup2",
        "getMyActivityListAction",
        "hasjoin",
        "acModel",
        "arr",
        "arrComp",
        "databmids",
        "studentID",
        "arr2",
        "console",
        "log",
        "difference",
        "order",
        "page",
        "countSelect",
        "arr3",
        "count",
        "currentPage",
        "pageSize",
        "totalPage",
        "getMyDiscussAction",
        "getMySceneryAction"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/myself.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst _ = require('lodash');\n\nmodule.exports = class extends Base {\n    async getMyallAction() {\n        const id = this.get('studentid');\n        const shstate = this.get('shstate');\n        const data = await this.model('student_activity').query(\"select count(studentID) as attentionSceneryTimes,(select count(studentID) as attentions from culture_attention_activity where studentid=\"+id+\" and shstate=\"+shstate+\") attentionJoinActivityTimes, (select count(studentID) as attentions from culture_student_activity where studentid=\"+id+\" and shstate=\"+shstate+\") attentionBaomingTimes, (select count(studentid) as attent from culture_discuss where studentid=\"+id+\") attentionDiscuss from culture_student_scenery where studentid=\"+id+\" and shstate=\"+shstate+\"\")\n        return this.success(data)\n    }\n\n    async getMyAttentionAction() {\n        const id = this.get('studentid');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const start = (pageindex -1) * pagesize;\n        const model =  this.model('student');\n        model._pk = \"studentID\";\n\n        const data = await model.query(\"select ssc.*, sc.schoolid,sc.longitude,sc.latitude,sc.sceneryTitle from culture_student_scenery ssc left join culture_scenery sc on ssc.sceneryid=sc.sceneryID where ssc.shstate=1 and ssc.studentid=\"+id+\" limit \"+start+\",\"+pagesize+\"\");\n        const counta = await model.query(\"select count(*) t from (select ssc.*, sc.schoolid,sc.longitude,sc.latitude,sc.sceneryTitle from culture_student_scenery ssc left join culture_scenery sc on ssc.sceneryid=sc.sceneryID where ssc.shstate=1 and ssc.studentid=\"+id+\" ) t\");\n        const pagecount = Math.ceil(counta[0].t / pagesize);\n\n        const arrdata = [];\n        for (const item of data) {\n            item.pics = await this.model('scenery').getPicsbyid(item.sceneryid);\n            item.shstate = await this.model('scenery').getstate(item.sceneryid);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n\n        return this.success({counta:counta[0].t,pagecount:pagecount,pageindex:pageindex,pagesize:pagesize,data})\n    }\n\n    async getArrStatu(dataAttendtionIds, studentid) {\n        // 取景点阀值\n        let arrActs = [];\n        if (!think.isEmpty(dataAttendtionIds)) {\n            for (let i = 0; i < dataAttendtionIds.length; i++) {\n                let actData = await this.model('activity').field(['activityID','needSchoolPass','needSceneryPass', 'isGroup']).where({activityID: dataAttendtionIds[i]}).find();\n                let needschoolpass = 0;\n                let needscenerypass = 0;\n                let isgroup = 0;\n                if (!think.isEmpty(actData)) {\n                    needschoolpass = actData.needSchoolPass;\n                    needscenerypass = actData.needSceneryPass;\n                    isgroup = actData.isGroup;\n                }\n\n                // 活动景点签到次数\n                let realattentscenery = 0; \n                let dataScenery = await this.model('attention_activity').field('sceneryid').where({studentid:studentid,activityid:dataAttendtionIds[i]}).getField('sceneryid');\n                if (!think.isEmpty(dataScenery)) {\n                    realattentscenery = dataScenery.length;\n                }\n\n                dataScenery = _.uniq(dataScenery)\n                // 景点所属学校\n                let dataschool = 0;\n                if (!think.isEmpty(dataScenery)) {\n                    dataScenery = dataScenery.join(',');\n                    dataschool = await this.model('scenery').field('schoolid').where({sceneryID: ['in', dataScenery]}).getField('schoolid');\n                    dataschool = _.uniq(dataschool)\n                    // console.log('schoolid------',dataschool)\n                }\n\n                let iscomplate = false;\n                if (isgroup == 0) { // 个人活动\n                    if (realattentscenery >= needscenerypass && dataschool && dataschool.length >= needschoolpass) {\n                        iscomplate = true;\n                    }\n                } else {\n                    let joindate = await this.model('student_activity').getStudentIsJoinGroup2(studentid,dataAttendtionIds[i], 1);\n                    if ((joindate && joindate.iscomplate)) {\n                        iscomplate = true;\n                    }\n                }\n\n                arrActs.push({activityid: dataAttendtionIds[i], iscomplate});\n            }\n        }\n        return arrActs;\n    }\n\n    async getMyActivityListAction() {\n        const studentid = this.get('studentid');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const hasjoin = this.get('hasjoin');\n\n        const start = (pageindex -1) * pagesize;\n        const model =  this.model('student');\n        model._pk = \"studentID\";\n        let data = null;\n        let counta = null;\n\n        // 参加了哪些活动\n        let dataAttendtionIds = await this.model('attention_activity').field('activityid').where({studentid: studentid}).getField('activityid')\n        if (!think.isEmpty(dataAttendtionIds)) {\n            dataAttendtionIds = _.uniq(dataAttendtionIds)\n        }\n        \n        let arrActs = await this.getArrStatu(dataAttendtionIds, studentid);\n\n\n        const acModel = this.model('activity');\n        acModel._pk = 'activityID';\n        let arr = []; // 已完成\n        for (let i = 0; i < arrActs.length; i++) {\n            if (arrActs[i].iscomplate) {\n                arr.push(arrActs[i].activityid)\n            }\n        }\n\n        let arrComp = [];\n        let databmids = [];\n\n        if (hasjoin == 0 || (hasjoin == 2 && arrActs && arrActs.length > 0)) {\n            databmids = await this.model('student_activity').field('activityid').where({studentID: studentid,shstate:1}).getField('activityid');\n            databmids = _.uniq(databmids);\n            arrComp = await this.getArrStatu(databmids, studentid);\n        }\n\n       \n        let arr2 = [];\n        if (arrActs && arrActs.length > 0) {\n            for (let i = 0; i < arrComp.length; i++) {\n                if (arrComp[i].iscomplate) {\n                    arr2.push(arrComp[i].activityid);\n                }\n            }\n        }\n\n        console.log('arr--------', dataAttendtionIds, arr2);\n        // 进行中\n        if (hasjoin == 1 && dataAttendtionIds && dataAttendtionIds.length > 0) {\n            dataAttendtionIds = _.difference(dataAttendtionIds, arr);\n            dataAttendtionIds = _.difference(dataAttendtionIds, arr2);\n            console.log('进行中------', dataAttendtionIds)\n            data = await acModel.where('endDate > now() and now() > startDate and activityID in ('+dataAttendtionIds.join(',')+')').order('activityID desc').page(pageindex,pagesize).countSelect()\n        } else if (hasjoin == 2) { // 已完成\n\n            if (arr2 && arr2.length > 0) {\n                console.log('已完成------', arr2)\n                data = await acModel.where('activityID in ('+arr2.join(',')+')').order('activityID desc').page(pageindex,pagesize).countSelect();\n            }\n        } else if (hasjoin == 0) { // 已报名\n            \n\n            // databmids = _.difference(databmids,arr);\n            // databmids = _.difference(databmids,dataAttendtionIds);\n            let arr3 = [];\n            for (let i = 0; i < arrComp.length; i++) {\n                if (!arrComp[i].iscomplate) {\n                    arr3.push(arrComp[i].activityid);\n                }\n            }\n            arr3 = _.difference(arr3, arr2);\n            arr3 = _.difference(arr3, dataAttendtionIds);\n\n            // console.log('已报名------', databmids)\n            // console.log('已完成------', arr)\n            console.log('报名活动------', arr3)\n            if (arr3 && arr3.length > 0) {\n                data = await acModel.where('activityID in ('+arr3.join(',')+')').order('activityID desc').page(pageindex,pagesize).countSelect();\n            }\n        }\n\n        const arrdata = [];\n        if (!think.isEmpty(data)) {\n            for (const item of data.data) {\n                item.pics = await this.model('activity').getPicsbyid(item.activityID);\n                item.shstate = await this.model('activity').getstate(item.activityID);\n                arrdata.push(item);\n            }\n            data.data = arrdata;\n        }\n        // return this.success({counta:counta[0].t,pagecount:pagecount,pageindex:pageindex,pagesize:pagesize,data})\n        if (!think.isEmpty(data)) {\n            return this.success(data)\n        } else {\n            return this.success({count:0,currentPage:1,pageSize: pagesize,totalPage: 0, data:[]})\n        }\n    }\n\n    async getMyDiscussAction() {\n        const studentid = this.get('studentid');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n\n        const model = this.model('discuss')\n        model._pk=\"discussID\";\n        const data = await model.where({studentid: studentid}).order('discussID desc').page(pageindex, pagesize).countSelect();\n        return this.success(data)\n    }\n\n    async getMySceneryAction() {\n        const studentid = this.get('studentid');\n        const model = this.model('student_scenery');\n        let data = null;\n        if (!think.isEmpty(studentid)) {\n            data = await model.query(\"select ss.*,s.sceneryTitle,s.shdesc,s.sctype from culture_student_scenery ss inner join culture_scenery s on ss.sceneryid=s.sceneryid where ss.studentid=\"+studentid+\" and ss.shstate=1 and ss.sceneryid not in (select targetid from culture_discuss where distype=0 and studentid=\"+studentid+\")\");\n        } else {\n            data = await model.query(\"select ss.*,s.sceneryTitle,s.shdesc,s.sctype from culture_student_scenery ss inner join culture_scenery s on ss.sceneryid=s.sceneryid where ss.shstate=1 and ss.sceneryid not in (select targetid from culture_discuss where distype=0)\");\n        }\n            const arrdata = [];\n        for (const item of data) {\n            item.pics = await this.model('scenery').getPicsbyid(item.sceneryid);\n            item.shstate = await this.model('scenery').getstate(item.sceneryid);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n        return this.success(data);\n    }\n}"
    ]
}