{
    "version": 3,
    "sources": [
        "../../../src/api/controller/index.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "indexAction",
        "User",
        "model",
        "select",
        "success",
        "homeAction",
        "_pk",
        "studentid",
        "get",
        "data",
        "field",
        "where",
        "isrecommend",
        "shstate",
        "order",
        "limit",
        "arrdata",
        "item",
        "pics",
        "getPicsbyid",
        "activityID",
        "joinnum",
        "getJoinNum",
        "think",
        "isEmpty",
        "joindate",
        "getStudentIsJoinActivity",
        "start",
        "Number",
        "Date",
        "startDate",
        "nowd",
        "end",
        "endDate",
        "length",
        "hasjoin",
        "push",
        "model2",
        "data2",
        "arrdata2",
        "sceneryID",
        "alldata",
        "activitydata",
        "scenerydata",
        "getIndexDataAction"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/index.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n  async indexAction() {\n    const User = await this.model('User').select();\n\n  // const data = await this.cache('rds_user');\n  // console.log(data)\n    return this.success({\n      User: User\n    });\n  }\n\n  async homeAction() {\n\n    // await this.cache('home_activity_scenery', null)\n    // await this.cache('home_activity_scenery', null, 'redis')\n    // const homedata = await this.cache('home_activity_scenery');\n    // if (!think.isEmpty(homedata)) {\n    //   console.log('redis found data ...')\n    //   return this.success(homedata)\n    // }\n    // 活动推荐\n    const model = this.model('activity');\n    model._pk = 'activityID';\n    const studentid = this.get('studentid');\n    const data = await model.field(['activityID', 'activityName', 'startDate','endDate','isGroup']).where({isrecommend:1, shstate:0}).order('activityID desc').limit(0,5).select();\n    \n    const arrdata = [];\n    for (const item of data) {\n      item.pics = await this.model('activity').getPicsbyid(item.activityID);\n      item.joinnum = await this.model('student_activity').getJoinNum(item.activityID);\n      if (!think.isEmpty(studentid)) {\n        let joindate = await this.model('student_activity').getStudentIsJoinActivity(studentid,item.activityID);\n        let start = Number(new Date(item.startDate));\n        let nowd = Number(new Date());\n        let end = Number(new Date(item.endDate));\n\n        if (nowd > end && joindate && joindate.length > 0) {\n            item.hasjoin = '已完成'\n        } else if(joindate && joindate.length > 0) {\n            item.hasjoin = '已报名' \n        } else if (start < nowd && nowd < end) {\n            item.hasjoin = '进行中';\n        }\n    } else {\n        let start = Number(new Date(item.startDate));\n        let nowd = Number(new Date());\n        let end = Number(new Date(item.endDate));\n\n        if (start < nowd && nowd < end) {\n            item.hasjoin = '进行中';\n        } else if (end < nowd) {\n            item.hasjoin = '已完成'\n        } else {\n            item.hasjoin = '未开始';\n        }\n    } \n    \n      arrdata.push(item);\n    }\n\n    // 景点推荐\n    const model2 = this.model('scenery');\n    model2._pk = 'sceneryID';\n    const data2 = await model2.field(['sceneryID', 'sceneryTitle']).where({isrecommend:1, shstate:0}).order('sceneryID desc').limit(0,5).select();\n    \n    const arrdata2 = [];\n    for (const item of data2) {\n      item.pics = await this.model('scenery').getPicsbyid(item.sceneryID);\n      item.joinnum = await this.model('student_scenery').getJoinNum(item.sceneryID);\n      arrdata2.push(item);\n    }\n\n    // console.log('write...')\n    let alldata = {activitydata: arrdata, scenerydata: arrdata2}\n    // await this.cache('home_activity_scenery', alldata, 'redis')\n    return this.success(alldata)\n  }\n\n  async getIndexDataAction(){\n    // let rdsoption = {auth_pass:'000000'}\n\n    // var client = redis.createClient(6379,'127.0.0.1', rdsoption);\n\n    // client.auth('000000',function(){\n    //   console.log('pass......')\n    // })\n    // client.set('hello',\"{aa:'bb',dd:'1234'}\");\n\n    // client.get('hello',function (err,v) {\n    //     console.log(\"redis get hello err,v\",err,v);\n    // })\n  }\n};\n"
    ]
}