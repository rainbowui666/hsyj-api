{
    "version": 3,
    "sources": [
        "../../../src/api/controller/auth.js"
    ],
    "names": [
        "Base",
        "require",
        "svgCaptcha",
        "http",
        "rp",
        "module",
        "exports",
        "loginAction",
        "options",
        "method",
        "url",
        "qs",
        "grant_type",
        "js_code",
        "post",
        "secret",
        "appid",
        "sessionData",
        "userObj",
        "JSON",
        "parse",
        "console",
        "log",
        "user",
        "model",
        "where",
        "wxopenid",
        "openid",
        "find",
        "think",
        "isEmpty",
        "avatarUrl",
        "gender",
        "nickName",
        "length",
        "indexOf",
        "lastIndexOf",
        "slice",
        "userId",
        "add",
        "studentName",
        "photo",
        "sex",
        "nickname",
        "newUserInfo",
        "TokenSerivce",
        "service",
        "sessionKey",
        "create",
        "user_id",
        "studentID",
        "success",
        "token",
        "userInfo",
        "logoutAction",
        "createCaptchaAction",
        "captcha",
        "inverse",
        "fontSize",
        "noise",
        "width",
        "height",
        "ctx",
        "req",
        "session",
        "text",
        "toLowerCase",
        "cache",
        "type",
        "res",
        "write",
        "String",
        "data",
        "end"
    ],
    "mappings": ";;AAAA,MAAMA,OAAOC,QAAQ,WAAR,CAAb;AACA,IAAIC,aAAaD,QAAQ,aAAR,CAAjB;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,MAAMG,KAAKH,QAAQ,iBAAR,CAAX;;AAEAI,OAAOC,OAAP,GAAiB,cAAcN,IAAd,CAAmB;AAC5BO,aAAN,GAAoB;AAAA;;AAAA;AAClB,YAAMC,UAAU;AACdC,gBAAQ,KADM;AAEdC,aAAK,8CAFS;AAGdC,YAAI;AACFC,sBAAY,oBADV;AAEFC,mBAAS,MAAKC,IAAL,CAAU,MAAV,CAFP;AAGFC,kBAAQ,kCAHN;AAIFC,iBAAO;AAJL;AAHU,OAAhB;;AAWA,UAAIC,cAAc,MAAMb,GAAGI,OAAH,CAAxB;AACA,YAAMU,UAAUC,KAAKC,KAAL,CAAWH,WAAX,CAAhB;;AAEAI,cAAQC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB;;AAEA;AACA,UAAIK,OAAO,MAAM,MAAKC,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B,EAACC,UAASR,QAAQS,MAAlB,EAA5B,EAAuDC,IAAvD,EAAjB;AACA,UAAGC,MAAMC,OAAN,CAAcP,IAAd,CAAH,EAAuB;AACrB,YAAIQ,YAAY,MAAKjB,IAAL,CAAU,WAAV,CAAhB;AACA,YAAIkB,SAAS,MAAKlB,IAAL,CAAU,QAAV,KAAuB,CAAvB,GAA2B,CAA3B,GAA+B,CAA5C;AACA,YAAImB,WAAW,MAAKnB,IAAL,CAAU,UAAV,CAAf;AACA,YAAGmB,YAAYA,SAASC,MAAT,IAAiB,CAA7B,IAAkCD,SAASE,OAAT,CAAiB,GAAjB,KAAuB,CAAzD,IAA8DF,SAASG,WAAT,CAAqB,GAArB,KAA4BH,SAASC,MAAT,GAAgB,CAA7G,EAAgH;AAC9GD,qBAAWA,SAASI,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAX;AACD;;AAEC,YAAIC,SAAS,MAAM,MAAKd,KAAL,CAAW,SAAX,EAAsBe,GAAtB,CAA0B;AACrCC,uBAAaP,QADwB;AAErCQ,iBAAOV,SAF8B;AAGrCW,eAAKV,MAHgC;AAIrCW,oBAAUV,QAJ2B;AAKrCP,oBAAUR,QAAQS;AALmB,SAA1B,CAAnB;AAOH;;AAED,YAAMiB,cAAc,MAAM,MAAKpB,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B,EAAEC,UAASR,QAAQS,MAAnB,EAA5B,EAAyDC,IAAzD,EAA1B;;AAEA,YAAMiB,eAAe,MAAKC,OAAL,CAAa,OAAb,EAAsB,KAAtB,CAArB;AACA,YAAMC,aAAa,MAAMF,aAAaG,MAAb,CAAoB,EAAEC,SAASL,YAAYM,SAAvB,EAApB,CAAzB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAO,MAAKC,OAAL,CAAa,EAAEC,OAAOL,UAAT,EAAqBM,UAAUT,WAA/B,EAAb,CAAP;AAhDkB;AAiDrB;;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGMU,cAAN,GAAqB;AAAA;;AAAA;AACnB,aAAO,OAAKH,OAAL,EAAP;AADmB;AAEpB;;AAEKI,qBAAN,GAA4B;AAAA;;AAAA;AAC1B,UAAIC,UAAUtD,WAAW8C,MAAX,CAAkB;AAC9B;AACAS,iBAAS,KAFqB;AAG9B;AACAC,kBAAU,EAJoB;AAK9B;AACAC,eAAO,CANuB;AAO9B;AACAC,eAAO,EARuB;AAS9B;AACAC,gBAAQ;AAVsB,OAAlB,CAAd;AAYA;AACA,aAAKC,GAAL,CAASC,GAAT,CAAaC,OAAb,GAAuBR,QAAQS,IAAR,CAAaC,WAAb,EAAvB;AACA7C,cAAQC,GAAR,CAAY,OAAKwC,GAAL,CAASC,GAAT,CAAaC,OAAzB,EAf0B,CAeS;AACnC;AACA,aAAKG,KAAL,CAAW,SAAX,EAAsB,OAAKL,GAAL,CAASC,GAAT,CAAaC,OAAnC;AACA,aAAKF,GAAL,CAASM,IAAT,GAAiB,eAAjB;AACA,aAAKN,GAAL,CAASO,GAAT,CAAaC,KAAb,CAAmBC,OAAOf,QAAQgB,IAAf,CAAnB;AACA,aAAKV,GAAL,CAASO,GAAT,CAAaI,GAAb;AApB0B;AAqB3B;;AAxHiC,CAApC",
    "file": "../../../src/api/controller/auth.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nvar svgCaptcha = require('svg-captcha');\nvar http = require('http');\nconst rp = require('request-promise');\n\nmodule.exports = class extends Base {\n  async loginAction() {\n    const options = {\n      method: 'GET',\n      url: 'https://api.weixin.qq.com/sns/jscode2session',\n      qs: {\n        grant_type: 'authorization_code',\n        js_code: this.post('code'),\n        secret: 'b92e07c57496470c7c961e4f4dbccfcc',\n        appid: 'wx57b35c6b53e20d2d'\n      }\n    };\n\n    let sessionData = await rp(options);\n    const userObj = JSON.parse(sessionData);\n\n    console.log('userObj', userObj)\n  \n    //根据openid 去数据库查询\n    let user = await this.model('student').where({wxopenid:userObj.openid}).find();\n    if(think.isEmpty(user)){\n      let avatarUrl = this.post('avatarUrl');\n      let gender = this.post('gender') == 1 ? 0 : 1;\n      let nickName = this.post('nickName');\n      if(nickName && nickName.length>=2 && nickName.indexOf('\"')==0 && nickName.lastIndexOf('\"')==(nickName.length-1)){\n        nickName = nickName.slice(1, -1);\n      }\n\n        let userId = await this.model('student').add({\n                studentName: nickName,\n                photo: avatarUrl,\n                sex: gender,\n                nickname: nickName,\n                wxopenid: userObj.openid\n              });\n    }\n\n    const newUserInfo = await this.model('student').where({ wxopenid:userObj.openid }).find();\n\n    const TokenSerivce = this.service('token', 'api');\n    const sessionKey = await TokenSerivce.create({ user_id: newUserInfo.studentID });\n\n    // console.log(sessionKey, user)\n    //获得token\n    // return this.json({token,user})\n    // if (think.isEmpty(user) || think.isEmpty(sessionKey)) {\n    //   return this.fail('登录失败');\n    // }\n\n    return this.success({ token: sessionKey, userInfo: newUserInfo });\n}\n\n  // async loginAction() {\n  //   const code = this.post('code');\n  //   const fullUserInfo = this.post('userInfo');\n  //   const tel = this.post('tel');\n  //   const schoolid = this.post('schoolid');\n  //   const studentname = this.post('studentname');\n  //   const stuNo = this.post('stuno');\n\n  //   // 解释用户数据 code 061i3zz12Z3K4V0CbVz126boz12i3zzK\n  //   // const userInfo = await this.service('weixin', 'api').login(code, fullUserInfo);\n  //   // if (think.isEmpty(userInfo)) {\n  //   //   return this.fail('登录失败');\n  //   // } \n\n  //   // 根据openid查找用户是否已经注册\n  //   // let userId = await this.model('student').where({ wxopenid: userInfo.openId }).getField('studentId', true);\n  //   // if (think.isEmpty(userId)) {\n  //     // 注册\n  //   //   userId = await this.model('user').add({\n  //   //     username: think.uuid(6),\n  //   //     pwd: '',\n  //   //     tel: '',\n  //   //     wxopenid: userInfo.openId,\n  //   //     photo: userInfo.avatarUrl || '',\n  //   //     sex: userInfo.gender || 1, // 性别 0：未知、1：男、2：女\n  //   //     nickname: userInfo.nickName\n  //   //   });\n  //   // }\n\n  //   // 查询用户信息\n  //   const newUserInfo = await this.model('student').where({ tel:tel, schoolid:schoolid,studentName:studentname, stuNo:stuNo }).find();\n\n  //   const TokenSerivce = this.service('token', 'api');\n  //   const sessionKey = await TokenSerivce.create({ user_id: newUserInfo.studentID });\n\n  //   if (think.isEmpty(newUserInfo) || think.isEmpty(sessionKey)) {\n  //     return this.fail('登录失败');\n  //   }\n\n  //   return this.success({ token: sessionKey, userInfo: newUserInfo });\n  // }\n\n  \n  async logoutAction() {\n    return this.success();\n  }\n\n  async createCaptchaAction() {\n    var captcha = svgCaptcha.create({  \n      // 翻转颜色  \n      inverse: false,  \n      // 字体大小  \n      fontSize: 36,  \n      // 噪声线条数  \n      noise: 2,  \n      // 宽度  \n      width: 80,  \n      // 高度  \n      height: 30,  \n    });  \n    // 保存到session,忽略大小写  \n    this.ctx.req.session = captcha.text.toLowerCase(); \n    console.log(this.ctx.req.session); //0xtg 生成的验证码\n    //保存到cookie 方便前端调用验证\n    this.cache('captcha', this.ctx.req.session); \n    this.ctx.type = ('image/svg+xml');\n    this.ctx.res.write(String(captcha.data));\n    this.ctx.res.end();\n  }\n\n\n};\n"
    ]
}