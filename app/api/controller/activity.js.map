{
    "version": 3,
    "sources": [
        "../../../src/api/controller/activity.js"
    ],
    "names": [
        "Base",
        "require",
        "fs",
        "module",
        "exports",
        "frontListAction",
        "page",
        "get",
        "size",
        "studentid",
        "model",
        "_pk",
        "endDate",
        "Date",
        "date",
        "getFullYear",
        "getMonth",
        "getDate",
        "data",
        "where",
        "shstate",
        "countSelect",
        "arrdata",
        "item",
        "pics",
        "getPicsbyid",
        "activityID",
        "console",
        "log",
        "Number",
        "startDate",
        "status",
        "joindate",
        "getStudentIsJoinActivity",
        "length",
        "hasjoin",
        "getstate",
        "push",
        "success",
        "getactivitydetailAction",
        "id",
        "find",
        "think",
        "isEmpty",
        "getActivityDiscussListAction",
        "discussList",
        "getDiscussById",
        "getActivitySceneryListAction",
        "pageindex",
        "pagesize",
        "start",
        "query",
        "activityid",
        "list2Action",
        "list",
        "field",
        "alias",
        "join",
        "table",
        "as",
        "on",
        "addEdit1Action",
        "activityName",
        "post",
        "sponsor",
        "meetingPlace",
        "secondSponsor",
        "needSchoolRang",
        "shdesc",
        "startAddress",
        "needSchoolPass",
        "needSceneryPass",
        "settingStart",
        "startSceneryid",
        "settingEnd",
        "endSceneryid",
        "isGroup",
        "groupNum",
        "param",
        "insertid",
        "add",
        "json",
        "targetid",
        "delete",
        "update",
        "addEdit2Action",
        "sceneryid",
        "questiontitle",
        "questiontype",
        "answera",
        "answerb",
        "answerc",
        "answerd",
        "rightanswer",
        "questionData",
        "questionTitle",
        "questionType",
        "answerA",
        "answerB",
        "answerC",
        "answerD",
        "rightAnswer",
        "questId",
        "questionid",
        "questionID",
        "deleteAction",
        "delete2Action"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/activity.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst fs = require('fs');\n\nmodule.exports = class extends Base {\n    async frontListAction() {\n        const page = this.get('page') || 1;\n        const size = this.get('size') || 10;\n        const studentid = this.get('studentid');\n        const model = this.model('activity');\n        model._pk = 'activityID';\n        const endDate = new Date();\n        const date = endDate.getFullYear()+'-'+(endDate.getMonth()+1)+'-'+endDate.getDate()+' 00:00:00'\n        const data = await model.where({shstate: 0, endDate:{'>': date}}).page(page,size).countSelect();\n\n        const arrdata = [];\n\n        for (const item of data.data) {\n            item.pics = await this.model('activity').getPicsbyid(item.activityID);\n            console.log(Number(new Date(item.startDate)), Number(new Date()), Number(new Date(item.endDate)))\n            if (Number(new Date(item.startDate)) <= Number(new Date()) <= Number(new Date(item.endDate))) {\n                item.status='进行中';\n            } else {\n                item.status = '';\n            }\n            let joindate = await this.model('student_activity').getStudentIsJoinActivity(studentid,item.activityID);\n            if (Number(new Date()) > Number(new Date(item.endDate)) && joindate && joindate.length > 0) {\n                item.hasjoin = '已完成'\n            } else if(item.hasjoin = joindate && joindate.length > 0) {\n                item.hasjoin = '已报名' \n            } else {\n                item.hasjoin = '';\n            }\n            item.shstate = await this.model('activity').getstate(item.activityID);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n\n        return this.success(data)\n    }\n\n    async getactivitydetailAction() {\n        const id = this.get('id');\n        const studentid = this.get('studentid');\n        const model = this.model('activity');\n        model._pk = 'activityID';\n        const data = await model.where({activityID: id}).find();\n        if (!think.isEmpty(data)) {\n            data.pics = await this.model('activity').getPicsbyid(data.activityID);\n            // data.discussList = await this.model('discuss').getDiscussById(id,1);\n            data.shstate = await this.model('activity').getstate(data.activityID);\n            let joindate = await this.model('student_activity').getStudentIsJoinActivity(studentid,data.activityID);\n            if (Number(new Date()) > Number(new Date(data.endDate)) && joindate && joindate.length > 0) {\n                data.hasjoin = '已完成'\n            } else if(data.hasjoin = joindate && joindate.length > 0) {\n                data.hasjoin = '已报名' \n            } else {\n                data.hasjoin = '';\n            }\n        }\n        return this.success(data);\n    }\n\n    async getActivityDiscussListAction() {\n        const id = this.get('id');\n        const model = this.model('activity');\n        model._pk = 'activityID';\n        const data = await model.where({activityID: id}).find();\n        if (!think.isEmpty(data)) {\n            data.discussList = await this.model('discuss').getDiscussById(id,1);\n            \n        }\n        return this.success(data);\n    }\n\n    async getActivitySceneryListAction() {\n        const studentid = this.get('studentid');\n        const model =  this.model('activity_scenery');\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const start = (pageindex -1) * pagesize;\n        const data = await model.query(\"select s.*,a.activityName,a.startSceneryid,a.endSceneryid,sc.schoolid,sc.address,sc.shdesc,sc.longitude,sc.latitude,sc.sctype,sc.shstate,sc.sceneryTitle from culture_activity_scenery as s left join culture_activity a on a.activityID=s.activityid left join culture_scenery sc on s.sceneryid=sc.sceneryID where a.activityID limit \"+start+\",\"+pagesize+\" \");\n        \n        const arrdata = [];\n        for (const item of data) {\n            item.shstate = await this.model('activity').getstate(item.activityid);\n            // item.question = await this.model('student_activity').studentJoinActivityAndAnswer(studentid,item.activityID,item.questionid)\n            arrdata.push(item)\n        }\n        data.data = arrdata;\n        return this.success({pageindex:pageindex,pagesize:pagesize,data})\n    }\n\n    async list2Action() {\n        const page = this.get('page') || 1;\n        const size = this.get('size') || 10;\n        \n        const model = this.model('question');\n        model._pk = 'questionID';\n        const list = await model.field(['q.questionID','q.questiontitle','q.answera','q.answerb','q.answerc','q.answerd','q.rightanswer',\n            's.sceneryid','s.activityid','cs.sceneryTitle','act.startAddress'])\n        .alias('q')\n        .join({\n            table:'activity_scenery',\n            join:'left',\n            as: 's',\n            on: ['q.questionID', 's.questionID']\n        })\n        .join({\n            table:'scenery',\n            join: 'left',\n            as: 'cs',\n            on: ['cs.sceneryid','s.sceneryid']\n        })\n        .join({\n            table:'activity',\n            join:'left',\n            as: 'act',\n            on: ['act.activityID','s.activityid']\n        }).page(page, size).countSelect();\n\n        \n        return this.success(list)\n    }\n\n    async addEdit1Action() {\n        const activityName = this.post('activityname');\n        const sponsor = this.post('sponsor') || '';\n        const meetingPlace = this.post('meetingplace') || '';\n        const secondSponsor = this.post('secondsponsor') || '';\n        const needSchoolRang= this.post('needschoolrang');\n\n        const startDate = this.post('startdate');\n        const endDate = this.post('enddate');\n        const shdesc = this.post('shdesc');\n\n        const shstate = this.post('shstate');\n        const startAddress = this.post('startaddress');\n        const needSchoolPass = this.post('needschoolpass');\n        const needSceneryPass = this.post('needscenerypass');\n        const settingStart = this.post('settingstart');\n        const startSceneryid = this.post('startsceneryid');\n\n        const settingEnd = this.post('settingend');\n        const endSceneryid = this.post('endsceneryid');\n        const isGroup = this.post('isgroup');\n        const groupNum = this.post('groupnum');\n\n        const id = this.get('id');\n\n        let param = {\n            activityName,\n            sponsor,\n            meetingPlace,\n            secondSponsor,\n            needSchoolRang,\n            startDate,\n            endDate,\n            shdesc,\n            shstate,\n            startAddress,\n            needSchoolPass,\n            needSceneryPass,\n            settingStart,\n            startSceneryid,\n            settingEnd,\n            endSceneryid,\n            isGroup,\n            groupNum\n        }; \n        if (think.isEmpty(id)) {\n            let model = this.model('activity');\n            const insertid = await model.add(param);\n            \n            // 上传活动图片\n            if (insertid) {\n                return this.json({\n                        insertid:insertid\n                    });\n            }\n        } else {\n            // 1 删除source, 2修改\n            await this.model('source').where({targetid:id}).delete();\n            await this.model('activity').where({activityID:id}).update(param);\n            return this.success('活动修改成功')\n        }\n        \n    }\n\n    async addEdit2Action() {\n        const sceneryid = this.post('sceneryid');\n        const questiontitle = this.post('questiontitle');\n        const questiontype = this.post('questiontype') || 0;\n        const answera = this.post('answera');\n        const answerb = this.post('answerb');\n        const answerc = this.post('answerc');\n        const answerd = this.post('answerd');\n        const rightanswer = this.post('rightanswer');\n        const id = this.get('id');\n        const activityid = this.get('activityid');\n\n        const questionData = {\n            sceneryid:sceneryid,\n            questionTitle:questiontitle,\n            questionType:questiontype,\n            answerA: answera,\n            answerB: answerb,\n            answerC: answerc,\n            answerD: answerd,\n            rightAnswer: rightanswer\n        }\n\n        if (think.isEmpty(id)) {\n            const questId = await this.model('question').add(questionData);\n            if (questId) {\n                await this.model('activity_scenery').add({\n                    sceneryid,questionid:questId,activityid:activityid\n                });\n            }\n            return this.success('第二步成功');\n        } else {\n            await this.model('activity_scenery').where({questionid:id}).delete()\n            await this.model('question').where({questionID:id}).update(questionData);\n            await this.model('activity_scenery').add({\n                sceneryid,questionid:id,activityid:activityid\n            });\n            return this.success('修改成功')\n        }\n    }\n\n    async deleteAction() {\n        const id = this.get('id');\n        const data = {\n            shstate: 1\n        }\n        await this.model('activity').where({activityID:id}).update(data);\n        return this.success('活动删除成功')\n    }\n\n    async delete2Action() {\n        const id = this.get('id');\n        const data = {\n            shstate: 1\n        }\n        await this.model('question').where({questionID:id}).update(data);\n        return this.success('活动第二步问题删除成功')\n    }\n}"
    ]
}