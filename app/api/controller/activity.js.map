{
    "version": 3,
    "sources": [
        "../../../src/api/controller/activity.js"
    ],
    "names": [
        "Base",
        "require",
        "fs",
        "module",
        "exports",
        "list2Action",
        "page",
        "get",
        "size",
        "model",
        "_pk",
        "list",
        "field",
        "alias",
        "join",
        "table",
        "as",
        "on",
        "countSelect",
        "success",
        "addEdit1Action",
        "activityName",
        "post",
        "sponsor",
        "meetingPlace",
        "secondSponsor",
        "needSchoolRang",
        "startDate",
        "endDate",
        "shdesc",
        "shstate",
        "startAddress",
        "needSchoolPass",
        "needSceneryPass",
        "settingStart",
        "startSceneryid",
        "settingEnd",
        "endSceneryid",
        "isGroup",
        "groupNum",
        "id",
        "param",
        "think",
        "isEmpty",
        "insertid",
        "add",
        "json",
        "where",
        "targetid",
        "delete",
        "activityID",
        "update",
        "addEdit2Action",
        "sceneryid",
        "questiontitle",
        "questiontype",
        "answera",
        "answerb",
        "answerc",
        "answerd",
        "rightanswer",
        "activityid",
        "questionData",
        "questionTitle",
        "questionType",
        "answerA",
        "answerB",
        "answerC",
        "answerD",
        "rightAnswer",
        "questId",
        "questionid",
        "questionID",
        "deleteAction",
        "data",
        "delete2Action"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/activity.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst fs = require('fs');\n\nmodule.exports = class extends Base {\n    async list2Action() {\n        const page = this.get('page') || 1;\n        const size = this.get('size') || 10;\n        \n        const model = this.model('question');\n        model._pk = 'questionID';\n        const list = await model.field(['q.questionID','q.questiontitle','q.answera','q.answerb','q.answerc','q.answerd','q.rightanswer',\n            's.sceneryid','s.activityid','cs.sceneryTitle','act.startAddress'])\n        .alias('q')\n        .join({\n            table:'activity_scenery',\n            join:'left',\n            as: 's',\n            on: ['q.questionID', 's.questionID']\n        })\n        .join({\n            table:'scenery',\n            join: 'left',\n            as: 'cs',\n            on: ['cs.sceneryid','s.sceneryid']\n        })\n        .join({\n            table:'activity',\n            join:'left',\n            as: 'act',\n            on: ['act.activityID','s.activityid']\n        }).page(page, size).countSelect();\n\n        \n        return this.success(list)\n    }\n\n    async addEdit1Action() {\n        const activityName = this.post('activityname');\n        const sponsor = this.post('sponsor') || '';\n        const meetingPlace = this.post('meetingplace') || '';\n        const secondSponsor = this.post('secondsponsor') || '';\n        const needSchoolRang= this.post('needschoolrang');\n\n        const startDate = this.post('startdate');\n        const endDate = this.post('enddate');\n        const shdesc = this.post('shdesc');\n\n        const shstate = this.post('shstate');\n        const startAddress = this.post('startaddress');\n        const needSchoolPass = this.post('needschoolpass');\n        const needSceneryPass = this.post('needscenerypass');\n        const settingStart = this.post('settingstart');\n        const startSceneryid = this.post('startsceneryid');\n\n        const settingEnd = this.post('settingend');\n        const endSceneryid = this.post('endsceneryid');\n        const isGroup = this.post('isgroup');\n        const groupNum = this.post('groupnum');\n\n        const id = this.get('id');\n\n        let param = {\n            activityName,\n            sponsor,\n            meetingPlace,\n            secondSponsor,\n            needSchoolRang,\n            startDate,\n            endDate,\n            shdesc,\n            shstate,\n            startAddress,\n            needSchoolPass,\n            needSceneryPass,\n            settingStart,\n            startSceneryid,\n            settingEnd,\n            endSceneryid,\n            isGroup,\n            groupNum\n        }; \n        if (think.isEmpty(id)) {\n            let model = this.model('activity');\n            const insertid = await model.add(param);\n            \n            // 上传活动图片\n            if (insertid) {\n                return this.json({\n                        insertid:insertid\n                    });\n            }\n        } else {\n            // 1 删除source, 2修改\n            await this.model('source').where({targetid:id}).delete();\n            await this.model('activity').where({activityID:id}).update(param);\n            return this.success('活动修改成功')\n        }\n        \n    }\n\n    async addEdit2Action() {\n        const sceneryid = this.post('sceneryid');\n        const questiontitle = this.post('questiontitle');\n        const questiontype = this.post('questiontype') || 0;\n        const answera = this.post('answera');\n        const answerb = this.post('answerb');\n        const answerc = this.post('answerc');\n        const answerd = this.post('answerd');\n        const rightanswer = this.post('rightanswer');\n        const id = this.get('id');\n        const activityid = this.get('activityid');\n\n        const questionData = {\n            sceneryid:sceneryid,\n            questionTitle:questiontitle,\n            questionType:questiontype,\n            answerA: answera,\n            answerB: answerb,\n            answerC: answerc,\n            answerD: answerd,\n            rightAnswer: rightanswer\n        }\n\n        if (think.isEmpty(id)) {\n            const questId = await this.model('question').add(questionData);\n            if (questId) {\n                await this.model('activity_scenery').add({\n                    sceneryid,questionid:questId,activityid:activityid\n                });\n            }\n            return this.success('第二步成功');\n        } else {\n            await this.model('activity_scenery').where({questionid:id}).delete()\n            await this.model('question').where({questionID:id}).update(questionData);\n            await this.model('activity_scenery').add({\n                sceneryid,questionid:id,activityid:activityid\n            });\n            return this.success('修改成功')\n        }\n    }\n\n    async deleteAction() {\n        const id = this.get('id');\n        const data = {\n            shstate: 1\n        }\n        await this.model('activity').where({activityID:id}).update(data);\n        return this.success('活动删除成功')\n    }\n\n    async delete2Action() {\n        const id = this.get('id');\n        const data = {\n            shstate: 1\n        }\n        await this.model('question').where({questionID:id}).update(data);\n        return this.success('活动第二步问题删除成功')\n    }\n}"
    ]
}