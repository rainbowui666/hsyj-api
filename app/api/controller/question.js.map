{
    "version": 3,
    "sources": [
        "../../../src/api/controller/question.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "getQuestionbyActidAction",
        "activityid",
        "get",
        "sceneryid",
        "model",
        "data",
        "think",
        "isEmpty",
        "query",
        "success"
    ],
    "mappings": ";;AAAA,MAAMA,OAAOC,QAAQ,WAAR,CAAb;;AAEAC,OAAOC,OAAP,GAAiB,cAAcH,IAAd,CAAmB;AAC1BI,4BAAN,GAAiC;AAAA;;AAAA;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAMC,aAAa,MAAKC,GAAL,CAAS,YAAT,CAAnB;AACA,kBAAMC,YAAY,MAAKD,GAAL,CAAS,WAAT,CAAlB;;AAEA,kBAAME,QAAQ,MAAKA,KAAL,CAAW,kBAAX,CAAd;AACA,gBAAIC,OAAO,IAAX;AACA,gBAAI,CAACC,MAAMC,OAAN,CAAcN,UAAd,CAAD,IAA8B,CAACK,MAAMC,OAAN,CAAcJ,SAAd,CAAnC,EAA6D;AACzDE,uBAAO,MAAMD,MAAMI,KAAN,CAAY,+IAA6IP,UAA7I,GAAwJ,oBAAxJ,GAA6KE,SAAzL,CAAb;AACH,aAFD,MAEO,IAAG,CAACG,MAAMC,OAAN,CAAcN,UAAd,CAAJ,EAA+B;AAClCI,uBAAO,MAAMD,MAAMI,KAAN,CAAY,+IAA6IP,UAAzJ,CAAb;AACH,aAFM,MAEA,IAAG,CAACK,MAAMC,OAAN,CAAcJ,SAAd,CAAJ,EAA8B;AACjCE,uBAAO,MAAMD,MAAMI,KAAN,CAAY,8IAA4IL,SAAxJ,CAAb;AACH;AACD,mBAAO,MAAKM,OAAL,CAAaJ,IAAb,CAAP;AAzB6B;AA0BhC;AA3B+B,CAApC",
    "file": "../../../src/api/controller/question.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n    async getQuestionbyActidAction() {\n        // const model = this.model('question');\n        // const id = this.get('id');\n        // const ac_scmodel = this.model('activity_scenery');\n        // const data = await ac_scmodel.field(['sc.*','q.questionTitle','q.questionType','q.answerA','q.answerB'\n        //     ,'q.answerC','q.answerD','q.rightAnswer'])\n        // .alias('sc')\n        // .join({\n        //     table: 'question',\n        //     join:'left',\n        //     as: 'q',\n        //     on:['sc.questionid','q.questionID']\n        // }).where({'sc.activityid':id}).find()\n        const activityid = this.get('activityid');\n        const sceneryid = this.get('sceneryid');\n\n        const model = this.model('activity_scenery');\n        let data = null;\n        if (!think.isEmpty(activityid) && !think.isEmpty(sceneryid)) {\n            data = await model.query(\"select aa.activityid,q.* from culture_activity_scenery aa inner join culture_question q on q.questionid=aa.questionid where aa.activityid=\"+activityid+\" and aa.sceneryid=\"+sceneryid);\n        } else if(!think.isEmpty(activityid)) {\n            data = await model.query(\"select aa.activityid,q.* from culture_activity_scenery aa inner join culture_question q on q.questionid=aa.questionid where aa.activityid=\"+activityid);\n        } else if(!think.isEmpty(sceneryid)) {\n            data = await model.query(\"select aa.activityid,q.* from culture_activity_scenery aa inner join culture_question q on q.questionid=aa.questionid where aa.sceneryid=\"+sceneryid);\n        }\n        return this.success(data);\n    }\n}"
    ]
}