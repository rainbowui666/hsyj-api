{
    "version": 3,
    "sources": [
        "../../../src/api/controller/search.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "searchListAction",
        "scenerymodel",
        "model",
        "_pk",
        "keyword",
        "get",
        "pageindex",
        "pagesize",
        "start",
        "data",
        "query",
        "arrdata",
        "item",
        "msgtype",
        "pics",
        "getPicsbyid",
        "id",
        "shstate",
        "getstate",
        "push",
        "success"
    ],
    "mappings": ";;AAAA,MAAMA,OAAOC,QAAQ,WAAR,CAAb;;AAEAC,OAAOC,OAAP,GAAiB,cAAcH,IAAd,CAAmB;AAC1BI,oBAAN,GAAyB;AAAA;;AAAA;AACrB,kBAAMC,eAAe,MAAKC,KAAL,CAAW,SAAX,CAArB;AACAD,yBAAaE,GAAb,GAAmB,WAAnB;AACA,kBAAMC,UAAU,MAAKC,GAAL,CAAS,SAAT,KAAuB,EAAvC;AACA,kBAAMC,YAAY,MAAKD,GAAL,CAAS,WAAT,KAAyB,CAA3C;AACA,kBAAME,WAAW,MAAKF,GAAL,CAAS,UAAT,KAAwB,CAAzC;AACA,kBAAMG,QAAQ,CAACF,YAAW,CAAZ,IAAiBC,QAA/B;;AAEA;AACA;AACA;AACA,gBAAIE,OAAO,MAAMR,aAAaS,KAAb,CAAmB,yJAAuJN,OAAvJ,GAA+J,6IAA/J,GAA6SA,OAA7S,GAAqT,2BAArT,GAAiVI,KAAjV,GAAuV,GAAvV,GAA2VD,QAA3V,GAAoW,EAAvX,CAAjB;;AAEA,kBAAMI,UAAU,EAAhB;AACA,iBAAK,MAAMC,IAAX,IAAmBH,IAAnB,EAAyB;AACrB,oBAAIG,KAAKC,OAAL,IAAgB,SAApB,EAA+B;AAC3BD,yBAAKE,IAAL,GAAY,MAAM,MAAKZ,KAAL,CAAW,SAAX,EAAsBa,WAAtB,CAAkCH,KAAKI,EAAvC,CAAlB;AACAJ,yBAAKK,OAAL,GAAe,MAAM,MAAKf,KAAL,CAAW,SAAX,EAAsBgB,QAAtB,CAA+BN,KAAKI,EAApC,CAArB;AACH,iBAHD,MAGO;AACHJ,yBAAKE,IAAL,GAAY,MAAM,MAAKZ,KAAL,CAAW,QAAX,EAAqBa,WAArB,CAAiCH,KAAKI,EAAtC,CAAlB;AACAJ,yBAAKK,OAAL,GAAe,MAAM,MAAKf,KAAL,CAAW,QAAX,EAAqBgB,QAArB,CAA8BN,KAAKI,EAAnC,CAArB;AACH;AACDL,wBAAQQ,IAAR,CAAaP,IAAb;AACH;AACDH,iBAAKA,IAAL,GAAYE,OAAZ;AACA,mBAAO,MAAKS,OAAL,CAAa,EAACd,WAAUA,SAAX,EAAqBC,UAASA,QAA9B,EAAuCE,IAAvC,EAAb,CAAP;AAzBqB;AA0BxB;AA3B+B,CAApC",
    "file": "../../../src/api/controller/search.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n    async searchListAction() {\n        const scenerymodel = this.model('scenery');\n        scenerymodel._pk = 'sceneryID'\n        const keyword = this.get('keyword') || '';\n        const pageindex = this.get('pageindex') || 1;\n        const pagesize = this.get('pagesize') || 5;\n        const start = (pageindex -1) * pagesize;\n\n        // const data = await scenerymodel.field(['sceneryid as id', 'scenerytitle as title', \"'scenery' as msgtype\", 'longitude','latitude']).where({scenerytitle: ['like', `%${keyword}%`]})\n        // .union(\"select schoolid as id,schoolname as title, 'school' as msgtype,longitude,latitude from culture_school where schoolname like '%\"+keyword+\"%'\")\n        // .page(pageindex, pagesize).countSelect()\n        var data = await scenerymodel.query(\"Select * from (select sceneryid as id,scenerytitle as title, 'scenery' as msgtype,longitude,latitude from culture_scenery where scenerytitle like '%\"+keyword+\"%' UNION all select schoolid as id,schoolname as title, 'school' as msgtype,longitude,latitude from culture_school where schoolname like '%\"+keyword+\"%') as aa where id limit \"+start+\",\"+pagesize+\"\")\n        \n        const arrdata = [];\n        for (const item of data) {\n            if (item.msgtype == 'scenery') {\n                item.pics = await this.model('scenery').getPicsbyid(item.id);\n                item.shstate = await this.model('scenery').getstate(item.id);\n            } else {\n                item.pics = await this.model('school').getPicsbyid(item.id);\n                item.shstate = await this.model('school').getstate(item.id);\n            }\n            arrdata.push(item)\n        }\n        data.data = arrdata;\n        return this.success({pageindex:pageindex,pagesize:pagesize,data})\n    }\n} "
    ]
}