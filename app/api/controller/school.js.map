{
    "version": 3,
    "sources": [
        "../../../src/api/controller/school.js"
    ],
    "names": [
        "Base",
        "require",
        "fs",
        "module",
        "exports",
        "indexAction",
        "page",
        "get",
        "size",
        "schoolname",
        "model",
        "_pk",
        "data",
        "countSelect",
        "where",
        "schoolName",
        "arrdata",
        "item",
        "pics",
        "getPicsbyid",
        "schoolID",
        "shstate",
        "getstate",
        "push",
        "success",
        "detailAction",
        "id",
        "find",
        "think",
        "isEmpty",
        "scenery",
        "getScenerybyid",
        "discussList",
        "getDiscussById",
        "deleteAction",
        "update",
        "addEditAction",
        "post",
        "province",
        "city",
        "address",
        "schooldesc",
        "longitude",
        "latitude",
        "soundurl",
        "videourl",
        "param",
        "insertid",
        "add",
        "json",
        "targetid",
        "delete"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/school.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst fs = require('fs');\n\nmodule.exports = class extends Base {\n    async indexAction() {\n        const page = this.get('page') || 1;\n        const size = this.get('size') || 10;\n        const schoolname = this.get('schoolname') || '';\n\n        const model = this.model('school');\n        model._pk = 'schoolID';\n        var data;\n        if (schoolname == '') {\n            data = await model.page(page, size).countSelect();\n        } else {\n            data = await model.where({schoolName: ['like', `%${schoolname}%`]}).page(page, size).countSelect();\n        }\n        const arrdata = [];\n        for (const item of data.data) {\n            item.pics = await this.model('school').getPicsbyid(item.schoolID);\n            item.shstate = await this.model('school').getstate(item.schoolID);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n        return this.success(data)\n    }\n\n    async detailAction() {\n        const id = this.get('id');\n        const model = this.model('school');\n        // model._pk = 'schoolID';\n\n        const data = await model.where({schoolID: id}).find();\n\n        const arrdata = [];\n        if (!think.isEmpty(data)) {\n        // for (const item of data.data) {\n            data.scenery = await this.model('school').getScenerybyid(data.schoolID);\n            data.discussList = await this.model('discuss').getDiscussById(id,2);\n        //     // item.shstate = await this.model('school').getstate(item.schoolID);\n        //     arrdata.push(item);\n        // }\n        // data.data = arrdata;\n        }\n        return this.success(data)\n    }\n\n    async deleteAction() {\n        const id = this.get('id');\n        const data = {\n            shstate: 1\n        }\n        await this.model('school').where({schoolID:id}).update(data);\n        return this.success('学校删除成功')\n    }\n    \n    async addEditAction() {\n        const schoolname = this.post('schoolname');\n        const province = this.post('province') || '';\n        const city = this.post('city') || '';\n        const address = this.post('address') || '';\n        const schooldesc= this.post('schooldesc');\n        const longitude = this.post('longitude');\n        const latitude = this.post('latitude');\n        const soundurl = this.post('soundurl');\n        const videourl = this.post('videourl');\n        const id = this.get('id');\n\n        let param = {\n            schoolName: schoolname,\n            province: province,\n            city: city,\n            address: address,\n            schooldesc: schooldesc,\n            longitude: longitude,\n            latitude: latitude,\n            soundurl,\n            videourl\n        }; \n        if (think.isEmpty(id)) {\n            let model = this.model('school');\n            const insertid = await model.add(param);\n            \n            // 上传学校图片\n            if (insertid) {\n                // const sourceaddress = this.post('sourceaddress');\n                // const insertid2 = await this.model('source').add({\n                //     sourceType:0,\n                //     sourceAddress: sourceaddress,\n                //     targetid: insertid\n                // });\n\n                return this.json({\n                        insertid:insertid\n                    });\n            }\n        } else {\n            // 1 删除source, 2修改\n            await this.model('source').where({targetid:id}).delete();\n            await this.model('school').where({schoolID:id}).update(param);\n            return this.success('学校修改成功')\n        }\n        \n    }\n}"
    ]
}