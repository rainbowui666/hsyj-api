{
    "version": 3,
    "sources": [
        "../../../src/api/controller/school.js"
    ],
    "names": [
        "Base",
        "require",
        "fs",
        "module",
        "exports",
        "indexAction",
        "page",
        "get",
        "size",
        "schoolname",
        "areaid",
        "model",
        "_pk",
        "data",
        "think",
        "isEmpty",
        "where",
        "shstate",
        "order",
        "countSelect",
        "schoolName",
        "arrdata",
        "item",
        "pics",
        "getPicsbyid",
        "schoolID",
        "getstate",
        "push",
        "success",
        "getSchoolListAction",
        "userinfo",
        "cache",
        "schoolid",
        "getAreaAction",
        "select",
        "detailAction",
        "id",
        "find",
        "scenery",
        "getScenerybyid",
        "discussList",
        "getDiscussById",
        "deleteAction",
        "update",
        "addEditAction",
        "post",
        "province",
        "city",
        "address",
        "schooldesc",
        "longitude",
        "latitude",
        "soundurl",
        "videourl",
        "parentid",
        "param",
        "createbyuserid",
        "sysUserID",
        "insertid",
        "add",
        "json",
        "targetid",
        "delete"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/school.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst fs = require('fs');\n\nmodule.exports = class extends Base {\n    async indexAction() {\n        const page = this.get('page') || 1;\n        const size = this.get('size') || 10;\n        const schoolname = this.get('schoolname') || '';\n        const areaid = this.get('areaid') || '';\n        \n        const model = this.model('school');\n        model._pk = 'schoolID';\n        var data;\n        if (think.isEmpty(schoolname) && think.isEmpty(areaid)) {\n            data = await model.where({shstate: 0}).page(page, size).order('schoolID desc').countSelect();\n        } else if (!think.isEmpty(schoolname)) {\n            data = await model.where({schoolName: ['like', `%${schoolname}%`], shstate: 0}).order('schoolID desc').page(page, size).countSelect();\n        } else {\n            data = await model.where({areaid: areaid, shstate: 0}).page(page, size).order('schoolID desc').countSelect();\n        }\n        \n        const arrdata = [];\n        for (const item of data.data) {\n            item.pics = await this.model('school').getPicsbyid(item.schoolID);\n            item.shstate = await this.model('school').getstate(item.schoolID);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n        return this.success(data)\n    }\n\n    async getSchoolListAction() {\n        const page = this.get('page') || 1;\n        const size = this.get('size') || 10;\n        const schoolname = this.get('schoolname') || '';\n        const areaid = this.get('areaid') || '';\n        let userinfo = await this.cache('userinfo');\n        \n        const model = this.model('school');\n        model._pk = 'schoolID';\n        var data;\n        if (think.isEmpty(schoolname) && think.isEmpty(areaid)) {\n            data = await model.where({schoolID: userinfo[0].schoolid}).page(page, size).countSelect();\n        } else if (!think.isEmpty(schoolname)) {\n            data = await model.where({schoolName: ['like', `%${schoolname}%`],schoolID: userinfo[0].schoolid}).page(page, size).countSelect();\n        } else {\n            data = await model.where({areaid: areaid, schoolID: userinfo[0].schoolid}).page(page, size).countSelect();\n        }\n        \n        const arrdata = [];\n        for (const item of data.data) {\n            item.pics = await this.model('school').getPicsbyid(item.schoolID);\n            item.shstate = await this.model('school').getstate(item.schoolID);\n            arrdata.push(item);\n        }\n        data.data = arrdata;\n        return this.success(data)\n    }\n\n    async getAreaAction() {\n        const data = await this.model('area').select();\n        return this.success(data);\n    }\n    \n    async detailAction() {\n        const id = this.get('schoolid');\n        const model = this.model('school');\n        // model._pk = 'schoolID';\n\n        const data = await model.where({schoolID: id}).find();\n\n        const arrdata = [];\n        if (!think.isEmpty(data)) {\n        // for (const item of data.data) {\n            data.scenery = await this.model('school').getScenerybyid(data.schoolID);\n            data.discussList = await this.model('discuss').getDiscussById(id,2);\n        //     // item.shstate = await this.model('school').getstate(item.schoolID);\n        //     arrdata.push(item);\n        // }\n        // data.data = arrdata;\n        }\n        return this.success(data)\n    }\n\n    async deleteAction() {\n        const id = this.get('id');\n        const data = {\n            shstate: 1\n        }\n        await this.model('school').where({schoolID:id}).update(data);\n        return this.success('学校删除成功')\n    }\n    \n    async addEditAction() {\n        const schoolname = this.post('schoolname');\n        const province = this.post('province') || '';\n        const city = this.post('city') || '';\n        const address = this.post('address') || '';\n        const schooldesc= this.post('schooldesc');\n        const longitude = this.post('longitude');\n        const latitude = this.post('latitude');\n        const soundurl = this.post('soundurl');\n        const videourl = this.post('videourl');\n        const areaid = this.post('areaid');\n        const parentid = this.post('parentid') || 0;\n        const id = this.get('id');\n        let userinfo = await this.cache('userinfo');\n\n        let param = {\n            schoolName: schoolname,\n            province: province,\n            city: city,\n            address: address,\n            schooldesc: schooldesc,\n            longitude: longitude,\n            latitude: latitude,\n            soundurl,\n            videourl,areaid,parentid,\n            createbyuserid: userinfo[0].sysUserID\n        }; \n        if (think.isEmpty(id)) {\n            let model = this.model('school');\n            const insertid = await model.add(param);\n            \n            // 上传学校图片\n            if (insertid) {\n                // const sourceaddress = this.post('sourceaddress');\n                // const insertid2 = await this.model('source').add({\n                //     sourceType:0,\n                //     sourceAddress: sourceaddress,\n                //     targetid: insertid\n                // });\n                return this.json({\n                        insertid:insertid\n                    });\n            }\n        } else {\n            // 1 删除source, 2修改\n            await this.model('source').where({targetid:id}).delete();\n            await this.model('school').where({schoolID:id}).update(param);\n            return this.success('学校修改成功')\n        }\n        \n    }\n}"
    ]
}