{
    "version": 3,
    "sources": [
        "../../../src/api/model/scenery.js"
    ],
    "names": [
        "_",
        "require",
        "module",
        "exports",
        "think",
        "Model",
        "getPicsbyid",
        "id",
        "data",
        "model",
        "where",
        "sourceType",
        "targetid",
        "select",
        "getstate",
        "_pk",
        "wantto",
        "sceneryid",
        "shstate",
        "count",
        "modeldis",
        "disnum",
        "distype",
        "getstudentstate",
        "studentid",
        "activityid",
        "checkin",
        "isEmpty",
        "getactivitystudentstate"
    ],
    "mappings": "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",
    "file": "../../../src/api/model/scenery.js",
    "sourcesContent": [
        "const _ = require('lodash');\n\nmodule.exports = class extends think.Model {\n    async getPicsbyid(id) {\n        const data = await this.model('source').where({sourceType: 1, targetid: id}).select();\n        return data;\n    }\n\n    async getstate(id) {\n        const model = this.model('student_scenery');\n        model._pk = 'sceneryid';\n        // const checkin = await model.where({sceneryid: id, shstate: 1}).count('sceneryid');\n        const wantto = await model.where({sceneryid: id, shstate: 0}).count('sceneryid');\n        // const sharenum = await model.where({sceneryid: id, shstate: 4}).count('sceneryid');\n\n        const modeldis = this.model('discuss');\n        modeldis._pk = 'discussID';\n        const disnum = await modeldis.where({distype: 0, targetid: id, shstate: 1}).count('discussID');\n        return {\n            // checkin: checkin,\n            wantto: wantto,\n            // sharenum: sharenum,\n            disnum: disnum\n        }\n    }\n\n    async getstudentstate(sceneryid, studentid, activityid) {\n        const model = this.model('student_scenery');\n        model._pk = 'sceneryid';\n        // const checkin = await model.where({sceneryid: id, shstate: 1}).count('sceneryid');\n        const wantto = await model.where({sceneryid: sceneryid, shstate: 0, studentid: studentid}).count('sceneryid');\n        let checkin = 0;\n        if (!think.isEmpty(activityid)) {\n            checkin = await this.model('attention_activity').where({studentid:studentid,sceneryid:sceneryid,activityid:activityid}).count('sceneryid');\n         } else {\n            checkin = await model.where({sceneryid: sceneryid, shstate: 1, studentid: studentid}).count('sceneryid');\n         } // \n        // const sharenum = await model.where({sceneryid: id, shstate: 4}).count('sceneryid');\n\n        const modeldis = this.model('discuss');\n        modeldis._pk = 'discussID';\n        const disnum = await modeldis.where({distype: 0, targetid: sceneryid, shstate: 1, studentid: studentid}).count('discussID');\n        return {\n            // checkin: checkin,\n            wantto: wantto,\n            checkin,\n            // sharenum: sharenum,\n            disnum: disnum\n        }\n    }\n\n    async getactivitystudentstate(sceneryid, studentid, activityid) {\n        const model = this.model('student_scenery');\n        model._pk = 'sceneryid';\n        // const checkin = await model.where({sceneryid: id, shstate: 1}).count('sceneryid');\n        const wantto = await model.where({sceneryid: sceneryid, shstate: 0, studentid: studentid}).count('sceneryid');\n        const checkin = await this.model('attention_activity').where({sceneryid: sceneryid, shstate: 1, studentid: studentid, activityid: activityid}).count('sceneryid');\n        // const sharenum = await model.where({sceneryid: id, shstate: 4}).count('sceneryid');\n\n        const modeldis = this.model('discuss');\n        modeldis._pk = 'discussID';\n        const disnum = await modeldis.where({distype: 0, targetid: sceneryid, shstate: 1, studentid: studentid}).count('discussID');\n        return {\n            // checkin: checkin,\n            wantto: wantto,\n            checkin,\n            // sharenum: sharenum,\n            disnum: disnum\n        }\n    }\n}"
    ]
}