{
    "version": 3,
    "sources": [
        "../../../src/api/model/student_activity.js"
    ],
    "names": [
        "_",
        "require",
        "module",
        "exports",
        "think",
        "Model",
        "getActivityHasJoin",
        "studentid",
        "activityid",
        "shstate",
        "data",
        "model",
        "where",
        "studentID",
        "select",
        "getStudentIsJoinActivity",
        "actData",
        "field",
        "activityID",
        "find",
        "needschoolpass",
        "needscenerypass",
        "isEmpty",
        "needSchoolPass",
        "needSceneryPass",
        "realattentscenery",
        "dataScenery",
        "getField",
        "length",
        "uniq",
        "dataschool",
        "join",
        "sceneryID",
        "iscomplate",
        "isAttentention",
        "databm",
        "console",
        "log",
        "studentJoinActivityAndAnswer",
        "questionid",
        "questiondata",
        "questionID",
        "getJoinNum",
        "getStudentIsJoinGroup",
        "needgroupnum",
        "groupNum",
        "checkindata",
        "strcheckinstudentids",
        "arr",
        "i",
        "strScenerys",
        "includes",
        "parseInt",
        "push",
        "gosceneries",
        "schoolbelong",
        "pass",
        "getActiveStatus",
        "ispass",
        "getStudentIsJoinGroup2",
        "groupData",
        "groupIds",
        "groupid",
        "groupcreateid",
        "groupStudentIds",
        "inarr",
        "j",
        "obj",
        "difference",
        "c"
    ],
    "mappings": "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",
    "file": "../../../src/api/model/student_activity.js",
    "sourcesContent": [
        "const _ = require('lodash');\n\nmodule.exports = class extends think.Model {\n    async getActivityHasJoin(studentid, activityid, shstate) {\n        const data = await this.model('student_activity').where({studentID: studentid, activityid: activityid, shstate: shstate}).select();\n        return data\n    }\n    // 活动的景点签到\n    async getStudentIsJoinActivity(studentid, activityid, shstate) {\n        // 取景点阀值\n        const actData = await this.model('activity').field(['activityID','needSchoolPass','needSceneryPass']).where({activityID: activityid}).find();\n        let needschoolpass = 0;\n        let needscenerypass = 0;\n        if (!think.isEmpty(actData)) {\n            needschoolpass = actData.needSchoolPass;\n            needscenerypass = actData.needSceneryPass;\n        }\n\n        // 活动景点签到次数\n        let realattentscenery = 0; \n        let dataScenery = await this.model('attention_activity').field('sceneryid').where({studentid:studentid,activityid:activityid}).getField('sceneryid');\n        if (!think.isEmpty(dataScenery)) {\n            realattentscenery = dataScenery.length;\n        }\n\n        dataScenery = _.uniq(dataScenery)\n        // console.log('dataScenery------',dataScenery)\n\n        // 景点所属学校\n        let dataschool = 0;\n        if (!think.isEmpty(dataScenery)) {\n            dataScenery = dataScenery.join(',');\n            dataschool = await this.model('scenery').field('schoolid').where({sceneryID: ['in', dataScenery]}).getField('schoolid');\n            dataschool = _.uniq(dataschool)\n            // console.log('schoolid------',dataschool)\n        }\n\n        let iscomplate = false;\n        if (realattentscenery >= needscenerypass && dataschool && dataschool.length >= needschoolpass) {\n            iscomplate = true;\n        }\n\n        let isAttentention = false;\n        const databm = await this.model('student_activity').where({studentID: studentid,activityid:activityid,shstate:shstate}).select();\n        if (!think.isEmpty(databm) && databm.length > 0) {\n            isAttentention = true;\n        }\n            \n        // if (realattentscenery > 0) {\n        //     isAttentention = true;\n        // }\n        // const data = await this.model('student_activity').where({studentID: studentid, activityid: activityid, shstate: shstate}).select();\n        console.log('getActivityHasJoin-----',studentid,activityid,isAttentention,iscomplate)\n        return {isAttentention, iscomplate};\n    }\n\n    async studentJoinActivityAndAnswer(studentid, activityid,questionid) {\n        const data = await this.model('student_activity').where({studentID:studentid,activityid:activityid,shstate:1}).select();\n        const questiondata = await this.model('question').where({questionID:questionid}).select();\n\n        return {\n            data,questiondata\n        }\n    }\n\n    async getJoinNum(activityid) {\n        const data = await this.model('student_activity').where({activityid:activityid, shstate:1}).select();\n        return data ? data.length : 0;\n    }\n\n    // 团体活动每个人都要完成阀值才算完成\n    async getStudentIsJoinGroup(studentid, activityid, shstate) {\n        // 取景点阀值和人数\n        const actData = await this.model('activity').field(['activityID','needSchoolPass','needSceneryPass','groupNum']).where({activityID: activityid}).find();\n        let needschoolpass = 0;\n        let needscenerypass = 0;\n        let needgroupnum = 0;\n        if (!think.isEmpty(actData)) {\n            needschoolpass = actData.needSchoolPass;\n            needscenerypass = actData.needSceneryPass;\n            needgroupnum = actData.groupNum;\n        }\n\n        // 查找有哪些同学签过到, studentid应该包括在内\n        let checkindata = await this.model('attention_activity').field('studentid').where({activityid:activityid}).getField('studentid');\n        let strcheckinstudentids = '';\n        if (!think.isEmpty(checkindata)) {\n            checkindata = _.uniq(checkindata);\n            // strcheckinstudentids = checkindata.join(',')\n        }\n\n        let arr = [];\n        for (let i = 0; i < checkindata.length; i ++) {\n            // 活动景点签到次数\n            let realattentscenery = 0; \n            let dataScenery = await this.model('attention_activity').field('sceneryid').where({studentid:checkindata[i],activityid:activityid}).getField('sceneryid');\n            if (!think.isEmpty(dataScenery)) {\n                realattentscenery = dataScenery.length;\n            }\n            dataScenery = _.uniq(dataScenery);\n\n            // 景点所属学校\n            let dataschool = 0;\n            let strScenerys = '';\n            if (!think.isEmpty(dataScenery)) {\n                strScenerys = dataScenery.join(',');\n                dataschool = await this.model('scenery').field('schoolid').where({sceneryID: ['in', strScenerys]}).getField('schoolid');\n                dataschool = _.uniq(dataschool)\n                // console.log('schoolid------',dataschool, dataScenery)\n            }\n\n            if (checkindata.includes(parseInt(checkindata[i]))) {\n                if (dataScenery.length >= needscenerypass && dataschool.length >= needschoolpass) {\n                    arr.push({studentid: checkindata[i], gosceneries: dataScenery, schoolbelong: dataschool, pass: true});\n                } else {\n                    arr.push({studentid: checkindata[i], gosceneries: dataScenery, schoolbelong: dataschool, pass: false});\n                }\n            }\n        }\n\n        let isAttentention = false;\n        let iscomplate = false;\n        if (arr.length >= needgroupnum) {\n            for (let i = 0; i < arr.length; i++) {\n                if (!arr[i].pass) {\n                    iscomplate = false;\n                    break;\n                } else {\n                    iscomplate = true;\n                }\n            }\n        }\n\n        // if (checkindata.includes(parseInt(studentid))) {\n            const databm = await this.model('student_activity').where({studentID: studentid,activityid:activityid,shstate:shstate}).select();\n            if (!think.isEmpty(databm) && databm.length > 0) {\n                isAttentention = true;\n            }\n        // } else {\n        //     iscomplate = false;\n        // }\n\n        \n        \n        // const data = await this.model('student_activity').where({studentID: studentid,activityid:activityid,shstate:shstate}).select();\n        console.log('getStudentIsJoinGroup-----', arr, isAttentention, iscomplate, needschoolpass,needscenerypass, needgroupnum)\n        return {isAttentention, iscomplate};\n    }\n\n    async getActiveStatus(studentid, activityid, needscenerypass, needschoolpass, ispass) {\n        let arr = {};\n        // 活动景点签到次数\n        let realattentscenery = 0; \n        // console.log('getActiveStatus.studentid', studentid)\n        let dataScenery = await this.model('attention_activity').field('sceneryid').where({studentid:studentid,activityid:activityid}).getField('sceneryid');\n        if (!think.isEmpty(dataScenery)) {\n            realattentscenery = dataScenery.length;\n        }\n        dataScenery = _.uniq(dataScenery);\n\n        // 景点所属学校\n        let dataschool = 0;\n        let strScenerys = '';\n        if (!think.isEmpty(dataScenery)) {\n            strScenerys = dataScenery.join(',');\n            dataschool = await this.model('scenery').field('schoolid').where({sceneryID: ['in', strScenerys]}).getField('schoolid');\n            dataschool = _.uniq(dataschool)\n            // console.log('schoolid------',dataschool, dataScenery)\n        }\n\n        if (think.isEmpty(ispass)) {\n            if (dataScenery.length >= needscenerypass && dataschool.length >= needschoolpass) {\n                arr = {studentid: studentid, gosceneries: dataScenery, schoolbelong: dataschool, pass: true};\n            } else {\n                arr = {studentid: studentid, gosceneries: dataScenery, schoolbelong: dataschool, pass: false};\n            }\n        } else {\n            arr = {studentid: studentid, gosceneries: dataScenery, schoolbelong: dataschool, pass: ispass};\n        }\n\n        return arr;\n    }\n\n    // 团体活动每个人都要完成阀值才算完成\n    async getStudentIsJoinGroup2(studentid, activityid, shstate) {\n        // 取景点阀值和人数\n        const actData = await this.model('activity').field(['activityID','needSchoolPass','needSceneryPass','groupNum']).where({activityID: activityid}).find();\n        let needschoolpass = 0;\n        let needscenerypass = 0;\n        let needgroupnum = 0;\n        if (!think.isEmpty(actData)) {\n            needschoolpass = actData.needSchoolPass;\n            needscenerypass = actData.needSceneryPass;\n            needgroupnum = actData.groupNum;\n        }\n        let arr = [];\n\n        // 查找团队\n        let groupData = await this.model('group').field(['groupid','studentid']).where({activityid:activityid}).getField('groupid,studentid');\n        let groupIds = groupData.groupid;\n        let groupcreateid = groupData.studentid;\n        // console.log('groupids---', groupIds)\n        groupIds = _.uniq(groupIds);\n\n        // 查找团队成员\n        if (!think.isEmpty(groupIds)) {\n            for (let i = 0; i < groupIds.length; i++) {\n                let groupStudentIds = await this.model('student_group').field('studentid').where({groupid: groupIds[i], activityid: activityid}).getField('studentid');\n                \n                if (!think.isEmpty(groupStudentIds)) {\n                    groupStudentIds = _.uniq(groupStudentIds);\n                    let inarr = _.includes(groupStudentIds, parseInt(studentid));\n                    console.log('groupStudentIds', groupcreateid, groupStudentIds, inarr)\n                    // 是否满足活动团队人数和student是否在团队\n                    if (inarr && groupStudentIds.length > 0 && groupStudentIds.length >= needgroupnum) {\n                        // 团队创建人是否完成\n                        if (!think.isEmpty(groupcreateid) && groupcreateid.length > 0) {\n                            for (let j = 0; j < groupcreateid.length; j++) {\n                                let obj = await this.getActiveStatus(groupcreateid[j], activityid, needscenerypass, needschoolpass);\n                                if (obj.pass) {\n                                    arr.push(obj);\n                                    break; // 团队创建人完成\n                                }\n                            }\n                        }\n                        if (arr.length > 0) {\n                            console.log('difference', groupStudentIds, arr[0].studentid)\n                            groupStudentIds = _.difference(groupStudentIds, [arr[0].studentid]);\n                            console.log('difference.after', groupStudentIds)\n                            for (let i = 0; i < groupStudentIds.length; i++) {\n                                arr.push({studentid: groupStudentIds[i], gosceneries: [], schoolbelong: [], pass: true});\n                            }\n                        }\n                        // arr = await this.getActiveStatus(groupcreateid, activityid, needscenerypass, needschoolpass);\n                        // break;\n                    } \n                    else {\n                        console.log('else----', studentid, groupStudentIds, inarr)\n                        arr.push({studentid: studentid, gosceneries: [], schoolbelong: [], pass: false});\n                    }\n                    console.log('aaaaaaa', arr)\n                }\n            }\n        }\n        // console.log('aaa', arr.length, arr)\n        arr = arr.find((c) => (c.studentid == studentid));\n        // console.log('aaa2', arr)\n\n        let isAttentention = false;\n        let iscomplate = false;\n        // if (arr.length >= needgroupnum) {\n            // for (let i = 0; i < arr.length; i++) {\n                if (!think.isEmpty(arr)) {\n                if (!arr.pass) {\n                    iscomplate = false;\n                    // break;\n                } else {\n                    iscomplate = true;\n                }\n            }\n            // }\n        // }\n\n        // if (checkindata.includes(parseInt(studentid))) {\n            const databm = await this.model('student_activity').where({studentID: studentid,activityid:activityid,shstate:shstate}).select();\n            if (!think.isEmpty(databm) && databm.length > 0) {\n                isAttentention = true;\n            }\n        // } else {\n        //     iscomplate = false;\n        // }\n\n        \n        \n        // const data = await this.model('student_activity').where({studentID: studentid,activityid:activityid,shstate:shstate}).select();\n        console.log('getStudentIsJoinGroup-----', arr, isAttentention, iscomplate, needschoolpass,needscenerypass, needgroupnum)\n        return {isAttentention, iscomplate};\n    }\n}"
    ]
}