{
    "version": 3,
    "sources": [
        "../../../src/api/model/student_activity.js"
    ],
    "names": [
        "_",
        "require",
        "module",
        "exports",
        "think",
        "Model",
        "getStudentIsJoinActivity",
        "studentid",
        "activityid",
        "data",
        "model",
        "where",
        "studentID",
        "select",
        "studentJoinActivityAndAnswer",
        "questionid",
        "shstate",
        "questiondata",
        "questionID",
        "getJoinNum",
        "length"
    ],
    "mappings": ";;AAAA,MAAMA,IAAIC,QAAQ,QAAR,CAAV;;AAEAC,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,KAApB,CAA0B;AACjCC,4BAAN,CAA+BC,SAA/B,EAA0CC,UAA1C,EAAsD;AAAA;;AAAA;AAClD,kBAAMC,OAAO,MAAM,MAAKC,KAAL,CAAW,kBAAX,EAA+BC,KAA/B,CAAqC,EAACC,WAAWL,SAAZ,EAAuBC,YAAYA,UAAnC,EAArC,EAAqFK,MAArF,EAAnB;;AAEA,mBAAOJ,IAAP;AAHkD;AAIrD;;AAEKK,gCAAN,CAAmCP,SAAnC,EAA8CC,UAA9C,EAAyDO,UAAzD,EAAqE;AAAA;;AAAA;AACjE,kBAAMN,OAAO,MAAM,OAAKC,KAAL,CAAW,kBAAX,EAA+BC,KAA/B,CAAqC,EAACC,WAAUL,SAAX,EAAqBC,YAAWA,UAAhC,EAA2CQ,SAAQ,CAAnD,EAArC,EAA4FH,MAA5F,EAAnB;AACA,kBAAMI,eAAe,MAAM,OAAKP,KAAL,CAAW,UAAX,EAAuBC,KAAvB,CAA6B,EAACO,YAAWH,UAAZ,EAA7B,EAAsDF,MAAtD,EAA3B;;AAEA,mBAAO;AACHJ,oBADG,EACEQ;AADF,aAAP;AAJiE;AAOpE;;AAEKE,cAAN,CAAiBX,UAAjB,EAA6B;AAAA;;AAAA;AACzB,kBAAMC,OAAO,MAAM,OAAKC,KAAL,CAAW,kBAAX,EAA+BC,KAA/B,CAAqC,EAACH,YAAWA,UAAZ,EAAwBQ,SAAQ,CAAhC,EAArC,EAAyEH,MAAzE,EAAnB;AACA,mBAAOJ,OAAOA,KAAKW,MAAZ,GAAqB,CAA5B;AAFyB;AAG5B;AAnBsC,CAA3C",
    "file": "../../../src/api/model/student_activity.js",
    "sourcesContent": [
        "const _ = require('lodash');\n\nmodule.exports = class extends think.Model {\n    async getStudentIsJoinActivity(studentid, activityid) {\n        const data = await this.model('student_activity').where({studentID: studentid, activityid: activityid}).select();\n        \n        return data;\n    }\n\n    async studentJoinActivityAndAnswer(studentid, activityid,questionid) {\n        const data = await this.model('student_activity').where({studentID:studentid,activityid:activityid,shstate:1}).select();\n        const questiondata = await this.model('question').where({questionID:questionid}).select();\n\n        return {\n            data,questiondata\n        }\n    }\n\n    async getJoinNum(activityid) {\n        const data = await this.model('student_activity').where({activityid:activityid, shstate:1}).select();\n        return data ? data.length : 0;\n    }\n}"
    ]
}