{
    "version": 3,
    "sources": [
        "../../../src/common/config/adapter.js"
    ],
    "names": [
        "fileCache",
        "require",
        "nunjucks",
        "fileSession",
        "mysql",
        "Console",
        "File",
        "DateFile",
        "path",
        "redisCache",
        "redisSession",
        "isDev",
        "think",
        "env",
        "exports",
        "cache",
        "type",
        "common",
        "timeout",
        "file",
        "handle",
        "cachePath",
        "join",
        "ROOT_PATH",
        "pathDepth",
        "gcInterval",
        "redis",
        "port",
        "host",
        "password",
        "model",
        "logConnect",
        "logSql",
        "logger",
        "msg",
        "info",
        "database",
        "prefix",
        "encoding",
        "user",
        "dateStrings",
        "session",
        "cookie",
        "name",
        "httpOnly",
        "sameSite",
        "signed",
        "overwrite",
        "maxAge",
        "autoUpdate",
        "view",
        "viewPath",
        "sep",
        "extname",
        "console",
        "backups",
        "absolute",
        "maxLogSize",
        "filename",
        "dateFile",
        "level",
        "pattern",
        "alwaysIncludePattern"
    ],
    "mappings": "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",
    "file": "../../../src/common/config/adapter.js",
    "sourcesContent": [
        "const fileCache = require('think-cache-file');\nconst nunjucks = require('think-view-nunjucks');\nconst fileSession = require('think-session-file');\nconst mysql = require('think-model-mysql');\nconst {Console, File, DateFile} = require('think-logger3');\nconst path = require('path');\nconst redisCache = require('think-cache-redis');\nconst redisSession = require('think-session-redis');\nconst isDev = think.env === 'development';\n\n/**\n * cache adapter config\n * @type {Object}\n */\nexports.cache = {\n  type: 'file', \n  common: {\n    timeout: 24 * 60 * 60 * 1000 // millisecond\n  },\n  file: {\n    handle: fileCache,\n    cachePath: path.join(think.ROOT_PATH, 'runtime/cache'), // absoulte path is necessarily required\n    pathDepth: 1,\n    gcInterval: 24 * 60 * 60 * 1000 // gc interval\n  }\n};\nexports.cache = {\n  type: 'redis',\n  common: {\n      timeout: 24 * 3600 * 1000 // millisecond\n  },\n  redis: {\n      handle: redisCache,\n      port: 6379,\n      host: '127.0.0.1',\n      password: '000000'\n  }\n};\n\n/**\n * model adapter config\n * @type {Object}\n */\nexports.model = {\n  type: 'mysql',\n  common: {\n    logConnect: isDev,\n    logSql: isDev,\n    logger: msg => think.logger.info(msg)\n  },\n  mysql: {\n    handle: mysql,\n    database: 'shculture',\n    prefix: 'culture_',\n    encoding: 'utf8',\n    host: '127.0.0.1',\n    port: '3306',\n    user: 'root',\n    password: '00000000',\n    dateStrings: true\n  }\n};\n\n/**\n * session adapter config\n * @type {Object}\n */\n// exports.session = {\n//   type: 'file',\n//   common: {\n//     cookie: {\n//       name: 'thinkjs'\n//       // keys: ['werwer', 'werwer'],\n//       // signed: true\n//     }\n//   },\n//   file: {\n//     handle: fileSession,\n//     sessionPath: path.join(think.ROOT_PATH, 'runtime/session')\n//   }\n// };\nexports.session = {\n  type: 'redis',\n  common: {\n      cookie: {\n          name: 'thinkjs',\n          // maxAge: '',\n          // expires: '',\n          path: '/',  // a string indicating the path of the cookie\n          // domain: '',\n          // secure: false,\n          // keys: [],\n          httpOnly: true,\n          sameSite: false,\n          signed: false,\n          overwrite: false\n      }\n  },\n  redis: {\n      handle: redisSession,\n      port: 6379,\n      host: '127.0.0.1',\n      password: '000000',\n      maxAge: 3600 * 1000, // session timeout, if not set, session will be persistent.\n      autoUpdate: false, // update expired time when get session, default is false\n  }\n};\n\n/**\n * view adapter config\n * @type {Object}\n */\nexports.view = {\n  type: 'nunjucks',\n  common: {\n    viewPath: path.join(think.ROOT_PATH, 'view'),\n    sep: '_',\n    extname: '.html'\n  },\n  nunjucks: {\n    handle: nunjucks\n  }\n};\n\n/**\n * logger adapter config\n * @type {Object}\n */\nexports.logger = {\n  type: isDev ? 'console' : 'dateFile',\n  console: {\n    handle: Console\n  },\n  file: {\n    handle: File,\n    backups: 10, // max chunk number\n    absolute: true,\n    maxLogSize: 50 * 1024, // 50M\n    filename: path.join(think.ROOT_PATH, 'logs/app.log')\n  },\n  dateFile: {\n    handle: DateFile,\n    level: 'ALL',\n    absolute: true,\n    pattern: '-yyyy-MM-dd',\n    alwaysIncludePattern: true,\n    filename: path.join(think.ROOT_PATH, 'logs/app.log')\n  }\n};\n"
    ]
}